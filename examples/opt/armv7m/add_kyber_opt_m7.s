.syntax unified
.cpu cortex-m4
.thumb

.align 2
.global pointwise_add_opt_m7
.type pointwise_add_opt_m7, %function
pointwise_add_opt_m7:
  push {r4-r11, lr}

  movw r14, #25
                                  // Instructions:    2
                                  // Expected cycles: 1
                                  // Expected IPC:    2.00
                                  //
                                  // Cycle bound:     1.0
                                  // IPC bound:       2.00
                                  //
                                  // Wall time:     0.00s
                                  // User time:     0.00s
                                  //
                                  // ----- cycle (expected) ------>
                                  // 0                        25
                                  // |------------------------|----
        ldr r8, [r2, #16]         // *.............................
        ldr r11, [r2, #12]        // *.............................

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // ldr r8, [r2, #16]       // *..............................
        // ldr r11, [r2, #12]      // *..............................

        sub r14, r14, #1
1:
                                  // Instructions:    20
                                  // Expected cycles: 10
                                  // Expected IPC:    2.00
                                  //
                                  // Cycle bound:     12.0
                                  // IPC bound:       1.67
                                  //
                                  // Wall time:     1.29s
                                  // User time:     1.29s
                                  //
                                  // ----- cycle (expected) ------>
                                  // 0                        25
                                  // |------------------------|----
        ldr r6, [r1, #16]         // *.............................
        ldr r4, [r1, #8]          // *.............................
        uadd16 r7, r6, r8         // .*............................
        str r7, [r0, #16]         // .*............................
        ldr r9, [r1, #4]          // ..*...........................
        ldr r10, [r2, #4]         // ..*...........................
        uadd16 r9, r9, r10        // ...*..........................
        str r9, [r0, #4]          // ...*..........................
        ldr r12, [r2, #8]         // ....*.........................
        uadd16 r4, r4, r12        // ....*.........................
        ldr r9, [r2], #20         // .....*........................
        str r4, [r0, #8]          // .....*........................
        ldr r8, [r1, #12]         // ......*.......................
        ldr r3, [r1], #20         // ......*.......................
        uadd16 r8, r8, r11        // .......*......................
        str r8, [r0, #12]         // .......*......................
        ldr r8, [r2, #16]         // ........e.....................
        uadd16 r4, r3, r9         // ........*.....................
        str r4, [r0], #20         // .........*....................
        ldr r11, [r2, #12]        // .........e....................

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // ldr r7, [r1, #16]       // ..*.........~.........~........
        // ldr r6, [r1, #12]       // ..'.....*...'.....~...'.....~..
        // ldr r5, [r1, #8]        // ..*.........~.........~........
        // ldr r4, [r1, #4]        // ..'.*.......'.~.......'.~......
        // ldr r3, [r1], #20       // ..'.....*...'.....~...'.....~..
        // ldr r12, [r2, #16]      // e.'.......~.'.......~.'........
        // ldr r11, [r2, #12]      // .e'........~'........~'........
        // ldr r10, [r2, #8]       // ..'...*.....'...~.....'...~....
        // ldr r9, [r2, #4]        // ..'.*.......'.~.......'.~......
        // ldr r8, [r2], #20       // ..'....*....'....~....'....~...
        // uadd16 r3, r3, r8       // ~.'.......*.'.......~.'........
        // uadd16 r4, r4, r9       // ..'..*......'..~......'..~.....
        // uadd16 r5, r5, r10      // ..'...*.....'...~.....'...~....
        // uadd16 r6, r6, r11      // ..'......*..'......~..'......~.
        // uadd16 r7, r7, r12      // ..'*........'~........'~.......
        // str r7, [r0, #16]       // ..'*........'~........'~.......
        // str r6, [r0, #12]       // ..'......*..'......~..'......~.
        // str r5, [r0, #8]        // ..'....*....'....~....'....~...
        // str r4, [r0, #4]        // ..'..*......'..~......'..~.....
        // str r3, [r0], #20       // .~'........*'........~'........

        subs r14, #1
        bne 1b
                                  // Instructions:    18
                                  // Expected cycles: 10
                                  // Expected IPC:    1.80
                                  //
                                  // Cycle bound:     10.0
                                  // IPC bound:       1.80
                                  //
                                  // Wall time:     0.11s
                                  // User time:     0.11s
                                  //
                                  // ----- cycle (expected) ------>
                                  // 0                        25
                                  // |------------------------|----
        ldr r4, [r1, #12]         // *.............................
        ldr r6, [r1, #8]          // *.............................
        uadd16 r4, r4, r11        // .*............................
        str r4, [r0, #12]         // .*............................
        ldr r9, [r1, #4]          // ..*...........................
        ldr r11, [r2, #4]         // ..*...........................
        uadd16 r4, r9, r11        // ...*..........................
        str r4, [r0, #4]          // ...*..........................
        ldr r11, [r1, #16]        // ....*.........................
        ldr r4, [r2, #8]          // ....*.........................
        uadd16 r8, r11, r8        // .....*........................
        str r8, [r0, #16]         // .....*........................
        ldr r8, [r1], #20         // ......*.......................
        uadd16 r11, r6, r4        // ......*.......................
        str r11, [r0, #8]         // .......*......................
        ldr r12, [r2], #20        // .......*......................
        uadd16 r8, r8, r12        // .........*....................
        str r8, [r0], #20         // .........*....................

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // ldr r6, [r1, #16]       // ....*..........................
        // ldr r4, [r1, #8]        // *..............................
        // uadd16 r7, r6, r8       // .....*.........................
        // str r7, [r0, #16]       // .....*.........................
        // ldr r9, [r1, #4]        // ..*............................
        // ldr r10, [r2, #4]       // ..*............................
        // uadd16 r9, r9, r10      // ...*...........................
        // str r9, [r0, #4]        // ...*...........................
        // ldr r12, [r2, #8]       // ....*..........................
        // uadd16 r4, r4, r12      // ......*........................
        // ldr r9, [r2], #20       // .......*.......................
        // str r4, [r0, #8]        // .......*.......................
        // ldr r8, [r1, #12]       // *..............................
        // ldr r3, [r1], #20       // ......*........................
        // uadd16 r8, r8, r11      // .*.............................
        // str r8, [r0, #12]       // .*.............................
        // uadd16 r4, r3, r9       // .........*.....................
        // str r4, [r0], #20       // .........*.....................


        pointwise_add_final_start:
                                 // Instructions:    12
                                 // Expected cycles: 7
                                 // Expected IPC:    1.71
                                 //
                                 // Cycle bound:     7.0
                                 // IPC bound:       1.71
                                 //
                                 // Wall time:     0.05s
                                 // User time:     0.05s
                                 //
                                 // ----- cycle (expected) ------>
                                 // 0                        25
                                 // |------------------------|----
        ldr r6, [r1, #8]         // *.............................
        ldr r8, [r1, #4]         // *.............................
        ldr r4, [r1], #12        // .*............................
        ldr r9, [r2, #8]         // .*............................
        uadd16 r7, r6, r9        // ..*...........................
        str r7, [r0, #8]         // ..*...........................
        ldr r9, [r2, #4]         // ...*..........................
        ldr r6, [r2], #12        // ...*..........................
        uadd16 r9, r8, r9        // ....*.........................
        str r9, [r0, #4]         // ....*.........................
        uadd16 r9, r4, r6        // .....*........................
        str r9, [r0], #12        // ......*.......................

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // ldr r5, [r1, #8]        // *..............................
        // ldr r4, [r1, #4]        // *..............................
        // ldr r3, [r1], #12       // .*.............................
        // ldr r10, [r2, #8]       // .*.............................
        // ldr r9, [r2, #4]        // ...*...........................
        // ldr r8, [r2], #12       // ...*...........................
        // uadd16 r3, r3, r8       // .....*.........................
        // uadd16 r4, r4, r9       // ....*..........................
        // uadd16 r5, r5, r10      // ..*............................
        // str r5, [r0, #8]        // ..*............................
        // str r4, [r0, #4]        // ....*..........................
        // str r3, [r0], #12       // ......*........................

        pointwise_add_final_end:


  pop {r4-r11, pc}
