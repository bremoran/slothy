.syntax unified
.cpu cortex-m4
.thumb

.align 2
.global pointwise_add_opt_m7
.type pointwise_add_opt_m7, %function
pointwise_add_opt_m7:
  push {r4-r11, lr}

  movw r14, #25
  1:
        pointwise_add_loop_start:
                                  // Instructions:    9
                                  // Expected cycles: 13
                                  // Expected IPC:    0.69
                                  //
                                  // Cycle bound:     13.0
                                  // IPC bound:       0.69
                                  //
                                  // Wall time:     0.25s
                                  // User time:     0.25s
                                  //
                                  // ----- cycle (expected) ------>
                                  // 0                        25
                                  // |------------------------|----
        ldm r1!, {r3-r7}          // *.............................
        subs.w r14, #1            // *.............................
        ldm r2!, {r8-r12}         // .....*........................
        uadd16 r3, r3, r8         // ..........*...................
        uadd16 r6, r6, r11        // ..........*...................
        uadd16 r4, r4, r9         // ...........*..................
        uadd16 r7, r7, r12        // ...........*..................
        uadd16 r5, r5, r10        // ............*.................
        stm r0!, {r3-r7}          // ............*.................

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // ldm r1!, {r3-r7}        // *..............................
        // ldm r2!, {r8-r12}       // .....*.........................
        // uadd16 r3, r3, r8       // ..........*....................
        // uadd16 r4, r4, r9       // ...........*...................
        // uadd16 r5, r5, r10      // ............*..................
        // uadd16 r6, r6, r11      // ..........*....................
        // uadd16 r7, r7, r12      // ...........*...................
        // stm r0!, {r3-r7}        // ............*..................
        // subs.w r14, #1          // *..............................

        pointwise_add_loop_end:

  bne.w 1b

  ldm r1!, {r3-r5}
  ldm r2!, {r8-r10}
  uadd16 r3, r3, r8
  uadd16 r4, r4, r9
  uadd16 r5, r5, r10
  stm r0!, {r3-r5}
  pop {r4-r11, pc}
