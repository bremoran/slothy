.syntax unified
.cpu cortex-m4
.thumb

.align 2
.global pointwise_add_opt_m7
.type pointwise_add_opt_m7, %function
pointwise_add_opt_m7:
  push {r4-r11, lr}

  movw r14, #25
                                 // Instructions:    2
                                 // Expected cycles: 1
                                 // Expected IPC:    2.00
                                 //
                                 // Cycle bound:     1.0
                                 // IPC bound:       2.00
                                 //
                                 // Wall time:     0.01s
                                 // User time:     0.01s
                                 //
                                 // ----- cycle (expected) ------>
                                 // 0                        25
                                 // |------------------------|----
        ldr r3, [r1, #8]         // *.............................
        ldr r10, [r1, #4]        // *.............................

                                  // ------ cycle (expected) ------>
                                  // 0                        25
                                  // |------------------------|-----
        // ldr r3, [r1, #8]       // *..............................
        // ldr r10, [r1, #4]      // *..............................

        sub r14, r14, #1
1:
                                   // Instructions:    20
                                   // Expected cycles: 10
                                   // Expected IPC:    2.00
                                   //
                                   // Cycle bound:     12.0
                                   // IPC bound:       1.67
                                   //
                                   // Wall time:     1.10s
                                   // User time:     1.10s
                                   //
                                   // ----- cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|----
        ldr r5, [r2, #12]          // *.............................
        ldr r11, [r2, #8]          // *.............................
        uadd16 r8, r3, r11         // .*............................
        str r8, [r0, #8]           // .*............................
        ldr r11, [r2, #4]          // ..*...........................
        uadd16 r7, r10, r11        // ..*...........................
        str r7, [r0, #4]           // ...*..........................
        ldr r11, [r1, #12]         // ...*..........................
        uadd16 r4, r11, r5         // ....*.........................
        ldr r3, [r2, #16]          // ....*.........................
        str r4, [r0, #12]          // .....*........................
        ldr r9, [r2], #20          // .....*........................
        ldr r7, [r1, #16]          // ......*.......................
        ldr r12, [r1], #20         // ......*.......................
        uadd16 r8, r7, r3          // .......*......................
        str r8, [r0, #16]          // .......*......................
        uadd16 r6, r12, r9         // ........*.....................
        ldr r3, [r1, #8]           // ........e.....................
        str r6, [r0], #20          // .........*....................
        ldr r10, [r1, #4]          // .........e....................

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // ldr r7, [r1, #16]       // ..'.....*...'.....~...'.....~..
        // ldr r6, [r1, #12]       // ..'..*......'..~......'..~.....
        // ldr r5, [r1, #8]        // e.'.......~.'.......~.'........
        // ldr r4, [r1, #4]        // .e'........~'........~'........
        // ldr r3, [r1], #20       // ..'.....*...'.....~...'.....~..
        // ldr r12, [r2, #16]      // ..'...*.....'...~.....'...~....
        // ldr r11, [r2, #12]      // ..*.........~.........~........
        // ldr r10, [r2, #8]       // ..*.........~.........~........
        // ldr r9, [r2, #4]        // ..'.*.......'.~.......'.~......
        // ldr r8, [r2], #20       // ..'....*....'....~....'....~...
        // uadd16 r3, r3, r8       // ~.'.......*.'.......~.'........
        // uadd16 r4, r4, r9       // ..'.*.......'.~.......'.~......
        // uadd16 r5, r5, r10      // ..'*........'~........'~.......
        // uadd16 r6, r6, r11      // ..'...*.....'...~.....'...~....
        // uadd16 r7, r7, r12      // ..'......*..'......~..'......~.
        // str r7, [r0, #16]       // ..'......*..'......~..'......~.
        // str r6, [r0, #12]       // ..'....*....'....~....'....~...
        // str r5, [r0, #8]        // ..'*........'~........'~.......
        // str r4, [r0, #4]        // ..'..*......'..~......'..~.....
        // str r3, [r0], #20       // .~'........*'........~'........

        subs r14, #1
        bne 1b
                                   // Instructions:    18
                                   // Expected cycles: 10
                                   // Expected IPC:    1.80
                                   //
                                   // Cycle bound:     10.0
                                   // IPC bound:       1.80
                                   //
                                   // Wall time:     0.10s
                                   // User time:     0.10s
                                   //
                                   // ----- cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|----
        ldr r7, [r2, #16]          // *.............................
        ldr r5, [r2, #4]           // *.............................
        uadd16 r12, r10, r5        // .*............................
        str r12, [r0, #4]          // .*............................
        ldr r5, [r1, #12]          // ..*...........................
        ldr r4, [r1, #16]          // ..*...........................
        uadd16 r11, r4, r7         // ...*..........................
        str r11, [r0, #16]         // ...*..........................
        ldr r7, [r2, #12]          // ....*.........................
        ldr r11, [r2, #8]          // ....*.........................
        uadd16 r6, r5, r7          // .....*........................
        str r6, [r0, #12]          // .....*........................
        uadd16 r10, r3, r11        // ......*.......................
        ldr r12, [r1], #20         // ......*.......................
        str r10, [r0, #8]          // .......*......................
        ldr r6, [r2], #20          // .......*......................
        uadd16 r5, r12, r6         // .........*....................
        str r5, [r0], #20          // .........*....................

                                    // ------ cycle (expected) ------>
                                    // 0                        25
                                    // |------------------------|-----
        // ldr r5, [r2, #12]        // ....*..........................
        // ldr r11, [r2, #8]        // ....*..........................
        // uadd16 r8, r3, r11       // ......*........................
        // str r8, [r0, #8]         // .......*.......................
        // ldr r11, [r2, #4]        // *..............................
        // uadd16 r7, r10, r11      // .*.............................
        // str r7, [r0, #4]         // .*.............................
        // ldr r11, [r1, #12]       // ..*............................
        // uadd16 r4, r11, r5       // .....*.........................
        // ldr r3, [r2, #16]        // *..............................
        // str r4, [r0, #12]        // .....*.........................
        // ldr r9, [r2], #20        // .......*.......................
        // ldr r7, [r1, #16]        // ..*............................
        // ldr r12, [r1], #20       // ......*........................
        // uadd16 r8, r7, r3        // ...*...........................
        // str r8, [r0, #16]        // ...*...........................
        // uadd16 r6, r12, r9       // .........*.....................
        // str r6, [r0], #20        // .........*.....................


        pointwise_add_final_start:
                                    // Instructions:    12
                                    // Expected cycles: 7
                                    // Expected IPC:    1.71
                                    //
                                    // Cycle bound:     7.0
                                    // IPC bound:       1.71
                                    //
                                    // Wall time:     0.04s
                                    // User time:     0.04s
                                    //
                                    // ----- cycle (expected) ------>
                                    // 0                        25
                                    // |------------------------|----
        ldr r7, [r1, #8]            // *.............................
        ldr r10, [r2, #4]           // *.............................
        ldr r3, [r2, #8]            // .*............................
        ldr r11, [r1, #4]           // .*............................
        uadd16 r12, r11, r10        // ..*...........................
        str r12, [r0, #4]           // ..*...........................
        uadd16 r10, r7, r3          // ...*..........................
        ldr r3, [r2], #12           // ...*..........................
        str r10, [r0, #8]           // ....*.........................
        ldr r11, [r1], #12          // ....*.........................
        uadd16 r11, r11, r3         // ......*.......................
        str r11, [r0], #12          // ......*.......................

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // ldr r5, [r1, #8]        // *..............................
        // ldr r4, [r1, #4]        // .*.............................
        // ldr r3, [r1], #12       // ....*..........................
        // ldr r10, [r2, #8]       // .*.............................
        // ldr r9, [r2, #4]        // *..............................
        // ldr r8, [r2], #12       // ...*...........................
        // uadd16 r3, r3, r8       // ......*........................
        // uadd16 r4, r4, r9       // ..*............................
        // uadd16 r5, r5, r10      // ...*...........................
        // str r5, [r0, #8]        // ....*..........................
        // str r4, [r0, #4]        // ..*............................
        // str r3, [r0], #12       // ......*........................

        pointwise_add_final_end:


  pop {r4-r11, pc}
