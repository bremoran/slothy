.syntax unified
.cpu cortex-m4
.thumb

// void basemul_asm_acc_opt_32_32(int32_t *, const int16_t *, const int16_t *, const int16_t *)
.global basemul_asm_acc_opt_32_32_opt_m7
.type basemul_asm_acc_opt_32_32_opt_m7, %function
.align 2
basemul_asm_acc_opt_32_32_opt_m7:
  push {r4-r11, lr}

  rptr_tmp  .req r0
  aptr      .req r1
  bptr      .req r2
  aprimeptr .req r3
  poly0     .req r4
  poly1     .req r6
  res0      .req r5
  res1      .req r7
  q         .req r8
  qa        .req r9
  qinv      .req r10
  tmp       .req r11
  tmp2      .req r12
  loop      .req r14

  // movw qa, #26632
 // movt  q, #3329
 ### qinv=0x6ba8f301
 // movw qinv, #62209
 // movt qinv, #27560

  movw loop, #64
                                   // Instructions:    3
                                   // Expected cycles: 2
                                   // Expected IPC:    1.50
                                   //
                                   // Cycle bound:     2.0
                                   // IPC bound:       1.50
                                   //
                                   // Wall time:     0.00s
                                   // User time:     0.00s
                                   //
                                   // ----- cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|----
        ldr.w r11, [r0, #4]        // *.............................
        ldr r4, [r2], #8           // *.............................
        ldr r5, [r1], #8           // .*............................

                                    // ------ cycle (expected) ------>
                                    // 0                        25
                                    // |------------------------|-----
        // ldr.w r11, [r0, #4]      // *..............................
        // ldr r4, [r2], #8         // *..............................
        // ldr r5, [r1], #8         // .*.............................

        sub loop, loop, #1
1:
                                       // Instructions:    18
                                       // Expected cycles: 12
                                       // Expected IPC:    1.50
                                       //
                                       // Cycle bound:     12.0
                                       // IPC bound:       1.50
                                       //
                                       // Wall time:     0.82s
                                       // User time:     0.82s
                                       //
                                       // ----- cycle (expected) ------>
                                       // 0                        25
                                       // |------------------------|----
        ldr.w r7, [r0, #12]            // *.............................
        smladx r12, r5, r4, r11        // .*............................
        ldr r11, [r1, #-4]             // .*............................
        ldr r10, [r2, #-4]             // ..*...........................
        str r12, [r0, #4]              // ..*...........................
        smladx r6, r11, r10, r7        // ....*.........................
        ldr r5, [r3], #8               // ....*.........................
        ldr.w r8, [r0]                 // .....*........................
        str r6, [r0, #12]              // .....*........................
        ldr.w r11, [r0, #8]            // ......*.......................
        ldr r7, [r3, #-4]              // ......*.......................
        smlad r8, r5, r4, r8           // .......*......................
        smlad r5, r7, r10, r11         // ........*.....................
        str r5, [r0, #8]               // .........*....................
        ldr.w r11, [r0, #20]           // .........e....................
        ldr r4, [r2], #8               // ..........e...................
        str r8, [r0], #16              // ...........*..................
        ldr r5, [r1], #8               // ...........e..................

                                       // ------ cycle (expected) ------>
                                       // 0                        25
                                       // |------------------------|-----
        // ldr r4, [r1], #8            // ..e'..........~'..........~'...
        // ldr r6, [r2], #8            // .e.'.........~.'.........~.'...
        // ldr.w r5, [r0]              // ...'....*......'....~......'...
        // ldr r12, [r3], #8           // ...'...*.......'...~.......'...
        // ldr.w r7, [r0, #4]          // e..'........~..'........~..'...
        // smlad r12, r12, r6, r5      // ...'......*....'......~....'...
        // str r12, [r0], #16          // ..~'..........*'..........~'...
        // smladx r11, r4, r6, r7      // ...'*..........'~..........'~..
        // str r11, [r0, #-12]         // ...'.*.........'.~.........'.~.
        // ldr r4, [r1, #-4]           // ...'*..........'~..........'~..
        // ldr r6, [r2, #-4]           // ...'.*.........'.~.........'.~.
        // ldr.w r5, [r0, #-8]         // ...'.....*.....'.....~.....'...
        // ldr r12, [r3, #-4]          // ...'.....*.....'.....~.....'...
        // ldr.w r7, [r0, #-4]         // ...*...........~...........~...
        // smlad r12, r12, r6, r5      // ...'.......*...'.......~...'...
        // str r12, [r0, #-8]          // ~..'........*..'........~..'...
        // smladx r11, r4, r6, r7      // ...'...*.......'...~.......'...
        // str r11, [r0, #-4]          // ...'....*......'....~......'...

        subs loop, #1
        bne 1b
                                      // Instructions:    15
                                      // Expected cycles: 11
                                      // Expected IPC:    1.36
                                      //
                                      // Cycle bound:     11.0
                                      // IPC bound:       1.36
                                      //
                                      // Wall time:     0.03s
                                      // User time:     0.03s
                                      //
                                      // ----- cycle (expected) ------>
                                      // 0                        25
                                      // |------------------------|----
        smladx r8, r5, r4, r11        // *.............................
        ldr r7, [r3], #8              // *.............................
        str r8, [r0, #4]              // .*............................
        ldr.w r8, [r0]                // .*............................
        ldr r11, [r2, #-4]            // ..*...........................
        ldr.w r6, [r0, #8]            // ..*...........................
        smlad r4, r7, r4, r8          // ...*..........................
        ldr.w r8, [r0, #12]           // ...*..........................
        str r4, [r0], #16             // ....*.........................
        ldr r4, [r1, #-4]             // ....*.........................
        ldr r7, [r3, #-4]             // .....*........................
        smladx r4, r4, r11, r8        // ......*.......................
        smlad r8, r7, r11, r6         // .......*......................
        str r4, [r0, #-4]             // ........*.....................
        str r8, [r0, #-8]             // ..........*...................

                                        // ------ cycle (expected) ------>
                                        // 0                        25
                                        // |------------------------|-----
        // ldr.w r7, [r0, #12]          // ...*...........................
        // smladx r12, r5, r4, r11      // *..............................
        // ldr r11, [r1, #-4]           // ....*..........................
        // ldr r10, [r2, #-4]           // ..*............................
        // str r12, [r0, #4]            // .*.............................
        // smladx r6, r11, r10, r7      // ......*........................
        // ldr r5, [r3], #8             // *..............................
        // ldr.w r8, [r0]               // .*.............................
        // str r6, [r0, #12]            // ........*......................
        // ldr.w r11, [r0, #8]          // ..*............................
        // ldr r7, [r3, #-4]            // .....*.........................
        // smlad r8, r5, r4, r8         // ...*...........................
        // smlad r5, r7, r10, r11       // .......*.......................
        // str r5, [r0, #8]             // ..........*....................
        // str r8, [r0], #16            // ....*..........................


  pop {r4-r11, pc}
