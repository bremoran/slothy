.syntax unified
.cpu cortex-m4
.thumb

// q locate in the top half of the register
.macro plant_red q, qa, qinv, tmp
 mul \tmp, \tmp, \qinv
 // tmp*qinv mod 2^2n/ 2^n; in high half
 smlatt \tmp, \tmp, \q, \qa
 // result in high half
.endm

// void basemul_asm_acc_opt_32_16(int16_t *, const int16_t *, const int16_t *, const int16_t *, const int32_t *)
.global basemul_asm_acc_opt_32_16_opt_m7
.type basemul_asm_acc_opt_32_16_opt_m7, %function
.align 2
basemul_asm_acc_opt_32_16_opt_m7:
  push {r4-r11, lr}

  rptr      .req r0
  aptr      .req r1
  bptr      .req r2
  aprimeptr .req r3
  poly0     .req r4
  poly1     .req r6
  res0      .req r5
  res1      .req r7
  q         .req r8
  qa        .req r9
  qinv      .req r10
  // tmp       .req r11
  tmp2      .req r12
  rptr_tmp  .req r11
  loop      .req r14

  movw qa, #26632
 movt  q, #3329
 ### qinv=0x6ba8f301
 movw qinv, #62209
 movt qinv, #27560

  ldr rptr_tmp, [sp, #9*4]
  movw loop, #64
                                         // Instructions:    18
                                         // Expected cycles: 14
                                         // Expected IPC:    1.29
                                         //
                                         // Cycle bound:     14.0
                                         // IPC bound:       1.29
                                         //
                                         // Wall time:     0.04s
                                         // User time:     0.04s
                                         //
                                         // ----- cycle (expected) ------>
                                         // 0                        25
                                         // |------------------------|----
        ldr.w r12, [r11], #4             // *.............................
        ldr r6, [r2], #4                 // .*............................
        ldr r5, [r3], #4                 // ..*...........................
        ldr.w r7, [r11], #4              // ...*..........................
        ldr r4, [r1], #4                 // ....*.........................
        smlad r12, r5, r6, r12           // ....*.........................
        ldr r5, [r3], #4                 // .....*........................
        smladx r4, r4, r6, r7            // ......*.......................
        ldr.w r6, [r11], #4              // .......*......................
        mul r7, r12, r10                 // .......*......................
        ldr r12, [r2], #4                // ........*.....................
        mul r4, r4, r10                  // ........*.....................
        smlatt r7, r7, r8, r9            // .........*....................
        smlad r5, r5, r12, r6            // ..........*...................
        smlatt r6, r4, r8, r9            // ...........*..................
        ldr r4, [r1], #4                 // ............*.................
        pkhtb r7, r6, r7, asr #16        // .............*................
        ldr.w r6, [r11], #4              // .............*................

                                          // ------ cycle (expected) ------>
                                          // 0                        25
                                          // |------------------------|-----
        // ldr.w r6, [r11], #4            // *..............................
        // ldr.w r7, [r11], #4            // ...*...........................
        // ldr r4, [r1], #4               // ....*..........................
        // ldr r12, [r2], #4              // .*.............................
        // ldr r5, [r3], #4               // ..*............................
        // smladx r7, r4, r12, r7         // ......*........................
        // ldr r4, [r3], #4               // .....*.........................
        // smlad r5, r5, r12, r6          // ....*..........................
        // ldr r12, [r2], #4              // ........*......................
        // mul r6, r7, r10                // ........*......................
        // mul r7, r5, r10                // .......*.......................
        // ldr.w r5, [r11], #4            // .......*.......................
        // smlatt r6, r6, r8, r9          // ...........*...................
        // smlatt r7, r7, r8, r9          // .........*.....................
        // smlad r5, r4, r12, r5          // ..........*....................
        // ldr r4, [r1], #4               // ............*..................
        // pkhtb r7, r6, r7, asr #16      // .............*.................
        // ldr.w r6, [r11], #4            // .............*.................

        sub r14, r14, #1
1:
                                          // Instructions:    27
                                          // Expected cycles: 18
                                          // Expected IPC:    1.50
                                          //
                                          // Cycle bound:     32.0
                                          // IPC bound:       0.84
                                          //
                                          // Wall time:     7.80s
                                          // User time:     7.80s
                                          //
                                          // ----- cycle (expected) ------>
                                          // 0                        25
                                          // |------------------------|----
        mul r5, r5, r10                   // *.............................
        smladx r4, r4, r12, r6            // .*............................
        str r7, [r0], #4                  // ..*...........................
        ldr.w r6, [r11], #4               // ..e...........................
        ldr.w r7, [r11], #4               // ...e..........................
        mul r4, r4, r10                   // ...*..........................
        smlatt r5, r5, r8, r9             // ....*.........................
        smlatt r12, r4, r8, r9            // .....*........................
        ldr r4, [r1], #4                  // ......e.......................
        pkhtb r5, r12, r5, asr #16        // .......*......................
        ldr r12, [r2], #4                 // .......e......................
        str r5, [r0], #4                  // ........*.....................
        ldr r5, [r3], #4                  // ........e.....................
        subs.w r14, #1                    // .........*....................
        smladx r7, r4, r12, r7            // .........e....................
        ldr r4, [r3], #4                  // ..........e...................
        smlad r5, r5, r12, r6             // ..........e...................
        ldr r12, [r2], #4                 // ...........e..................
        mul r6, r7, r10                   // ...........e..................
        mul r7, r5, r10                   // ............e.................
        ldr.w r5, [r11], #4               // .............e................
        smlatt r6, r6, r8, r9             // .............e................
        smlatt r7, r7, r8, r9             // ..............e...............
        smlad r5, r4, r12, r5             // ...............e..............
        ldr r4, [r1], #4                  // ................e.............
        pkhtb r7, r6, r7, asr #16         // .................e............
        ldr.w r6, [r11], #4               // .................e............

                                          // ------ cycle (expected) ------>
                                          // 0                        25
                                          // |------------------------|-----
        // ldr r4, [r1], #4               // ....e...........'.....~........
        // ldr r6, [r2], #4               // .....e..........'......~.......
        // ldr.w r5, [r11], #4            // e...............'.~............
        // ldr r12, [r3], #4              // ......e.........'.......~......
        // ldr.w r7, [r11], #4            // .e..............'..~...........
        // smlad r5, r12, r6, r5          // ........e.......'.........~....
        // mul r5, r5, r10                // ..........e.....'...........~..
        // smlatt r5, r5, r8, r9          // ............e...'..............
        // smladx r7, r4, r6, r7          // .......e........'........~.....
        // mul r7, r7, r10                // .........e......'..........~...
        // smlatt r7, r7, r8, r9          // ...........e....'............~.
        // pkhtb r5, r7, r5, asr #16      // ...............e'..............
        // str r5, [r0], #4               // ~...............'.*............
        // ldr r4, [r1], #4               // ..............e.'..............
        // ldr r6, [r2], #4               // .........e......'..........~...
        // ldr.w r5, [r11], #4            // ...........e....'............~.
        // ldr r12, [r3], #4              // ........e.......'.........~....
        // ldr.w r7, [r11], #4            // ...............e'..............
        // smlad r5, r12, r6, r5          // .............e..'..............
        // mul r5, r5, r10                // ................*..............
        // smlatt r5, r5, r8, r9          // ..~.............'...*..........
        // smladx r7, r4, r6, r7          // ................'*.............
        // mul r7, r7, r10                // .~..............'..*...........
        // smlatt r7, r7, r8, r9          // ...~............'....*.........
        // pkhtb r5, r7, r5, asr #16      // .....~..........'......*.......
        // str r5, [r0], #4               // ......~.........'.......*......
        // subs.w r14, #1                 // .......~........'........*.....

        bne 1b
                                           // Instructions:    9
                                           // Expected cycles: 7
                                           // Expected IPC:    1.29
                                           //
                                           // Cycle bound:     7.0
                                           // IPC bound:       1.29
                                           //
                                           // Wall time:     0.02s
                                           // User time:     0.02s
                                           //
                                           // ----- cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|----
        subs.w r14, #1                     // *.............................
        smladx r12, r4, r12, r6            // *.............................
        mul r6, r5, r10                    // .*............................
        mul r12, r12, r10                  // ..*...........................
        smlatt r6, r6, r8, r9              // ...*..........................
        smlatt r12, r12, r8, r9            // ....*.........................
        str r7, [r0], #4                   // .....*........................
        pkhtb r12, r12, r6, asr #16        // ......*.......................
        str r12, [r0], #4                  // ......*.......................

                                           // ------ cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|-----
        // mul r5, r5, r10                 // .*.............................
        // smladx r4, r4, r12, r6          // *..............................
        // str r7, [r0], #4                // .....*.........................
        // mul r4, r4, r10                 // ..*............................
        // smlatt r5, r5, r8, r9           // ...*...........................
        // smlatt r12, r4, r8, r9          // ....*..........................
        // pkhtb r5, r12, r5, asr #16      // ......*........................
        // str r5, [r0], #4                // ......*........................
        // subs.w r14, #1                  // *..............................


  pop {r4-r11, pc}