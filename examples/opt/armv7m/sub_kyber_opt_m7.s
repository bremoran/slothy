.syntax unified
.cpu cortex-m4
.thumb

.align 2
.global pointwise_sub_opt_m7
.type pointwise_sub_opt_m7, %function
pointwise_sub_opt_m7:
  push {r4-r11, lr}

  movw r14, #25
  1:
        pointwise_sub_loop_start:
                                   // Instructions:    9
                                   // Expected cycles: 16
                                   // Expected IPC:    0.56
                                   //
                                   // Wall time:     0.03s
                                   // User time:     0.03s
                                   //
                                   // ----- cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|----
        subs.w r14, #1             // *.............................
        ldm r1!, {r8-r12}          // *.............................
        ldm r2!, {r3-r7}           // .....*........................
        usub16 r12, r12, r7        // ..........*...................
        usub16 r11, r11, r6        // ..........*...................
        usub16 r9, r9, r4          // ...........*..................
        usub16 r8, r8, r3          // ...........*..................
        usub16 r10, r10, r5        // ............*.................
        stm r0!, {r8-r12}          // ............*.................

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // ldm r1!, {r3-r7}        // *..............................
        // ldm r2!, {r8-r12}       // .....*.........................
        // usub16 r3, r3, r8       // ...........*...................
        // usub16 r4, r4, r9       // ...........*...................
        // usub16 r5, r5, r10      // ............*..................
        // usub16 r6, r6, r11      // ..........*....................
        // usub16 r7, r7, r12      // ..........*....................
        // stm r0!, {r3-r7}        // ............*..................
        // subs.w r14, #1          // *..............................

        pointwise_sub_loop_end:

  bne.w 1b

  ldm r1!, {r3-r5}
  ldm r2!, {r8-r10}
  usub16 r3, r3, r8
  usub16 r4, r4, r9
  usub16 r5, r5, r10
  stm r0!, {r3-r5}
  pop {r4-r11, pc}
