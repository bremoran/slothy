.syntax unified
.cpu cortex-m4
.thumb

.align 2
.global pointwise_sub_opt_m7
.type pointwise_sub_opt_m7, %function
pointwise_sub_opt_m7:
  push {r4-r11, lr}

  movw r14, #25
                // Instructions:    0
                // Expected cycles: 0
                // Expected IPC:    0.00
                //
                // Wall time:     0.00s
                // User time:     0.00s
                //
1:
                                   // Instructions:    21
                                   // Expected cycles: 11
                                   // Expected IPC:    1.91
                                   //
                                   // Cycle bound:     11.0
                                   // IPC bound:       1.91
                                   //
                                   // Wall time:     0.85s
                                   // User time:     0.85s
                                   //
                                   // ----- cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|----
        ldr r7, [r1, #16]          // *.............................
        ldr r9, [r1, #12]          // *.............................
        ldr r3, [r2, #12]          // .*............................
        ldr r8, [r2, #16]          // .*............................
        usub16 r9, r9, r3          // ..*...........................
        ldr r11, [r1, #8]          // ..*...........................
        subs.w r14, #1             // ...*..........................
        ldr r12, [r2, #8]          // ...*..........................
        usub16 r6, r11, r12        // ....*.........................
        str r9, [r0, #12]          // ....*.........................
        usub16 r4, r7, r8          // .....*........................
        ldr r8, [r2], #20          // .....*........................
        str r4, [r0, #16]          // ......*.......................
        ldr r9, [r2, #-16]         // ......*.......................
        ldr r7, [r1, #4]           // .......*......................
        str r6, [r0, #8]           // .......*......................
        ldr r5, [r1], #20          // ........*.....................
        usub16 r9, r7, r9          // .........*....................
        str r9, [r0, #4]           // .........*....................
        usub16 r9, r5, r8          // ..........*...................
        str r9, [r0], #20          // ..........*...................

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // ldr r7, [r1, #16]       // *..........~..........~........
        // ldr r6, [r1, #12]       // *..........~..........~........
        // ldr r5, [r1, #8]        // ..*........'.~........'.~......
        // ldr r4, [r1, #4]        // .......*...'......~...'......~.
        // ldr r3, [r1], #20       // ........*..'.......~..'........
        // ldr r12, [r2, #16]      // .*.........'~.........'~.......
        // ldr r11, [r2, #12]      // .*.........'~.........'~.......
        // ldr r10, [r2, #8]       // ...*.......'..~.......'..~.....
        // ldr r9, [r2, #4]        // ......*....'.....~....'.....~..
        // ldr r8, [r2], #20       // .....*.....'....~.....'....~...
        // usub16 r3, r3, r8       // ..........*'.........~'........
        // usub16 r4, r4, r9       // .........*.'........~.'........
        // usub16 r5, r5, r10      // ....*......'...~......'...~....
        // usub16 r6, r6, r11      // ..*........'.~........'.~......
        // usub16 r7, r7, r12      // .....*.....'....~.....'....~...
        // str r7, [r0, #16]       // ......*....'.....~....'.....~..
        // str r6, [r0, #12]       // ....*......'...~......'...~....
        // str r5, [r0, #8]        // .......*...'......~...'......~.
        // str r4, [r0, #4]        // .........*.'........~.'........
        // str r3, [r0], #20       // ..........*'.........~'........
        // subs.w r14, #1          // ...*.......'..~.......'..~.....

        bne 1b
                // Instructions:    0
                // Expected cycles: 0
                // Expected IPC:    0.00
                //
                // Wall time:     0.00s
                // User time:     0.00s
                //

        pointwise_sub_final_start:
                                   // Instructions:    12
                                   // Expected cycles: 6
                                   // Expected IPC:    2.00
                                   //
                                   // Cycle bound:     6.0
                                   // IPC bound:       2.00
                                   //
                                   // Wall time:     0.03s
                                   // User time:     0.03s
                                   //
                                   // ----- cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|----
        ldr r9, [r1, #8]           // *.............................
        ldr r11, [r1, #4]          // *.............................
        ldr r4, [r2, #8]           // .*............................
        ldr r5, [r1], #12          // .*............................
        usub16 r9, r9, r4          // ..*...........................
        ldr r4, [r2, #4]           // ..*...........................
        str r9, [r0, #8]           // ...*..........................
        ldr r9, [r2], #12          // ...*..........................
        usub16 r11, r11, r4        // ....*.........................
        str r11, [r0, #4]          // ....*.........................
        usub16 r9, r5, r9          // .....*........................
        str r9, [r0], #12          // .....*........................

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // ldr r5, [r1, #8]        // *..............................
        // ldr r4, [r1, #4]        // *..............................
        // ldr r3, [r1], #12       // .*.............................
        // ldr r10, [r2, #8]       // .*.............................
        // ldr r9, [r2, #4]        // ..*............................
        // ldr r8, [r2], #12       // ...*...........................
        // usub16 r3, r3, r8       // .....*.........................
        // usub16 r4, r4, r9       // ....*..........................
        // usub16 r5, r5, r10      // ..*............................
        // str r5, [r0, #8]        // ...*...........................
        // str r4, [r0, #4]        // ....*..........................
        // str r3, [r0], #12       // .....*.........................

        pointwise_sub_final_end:


  pop {r4-r11, pc}
