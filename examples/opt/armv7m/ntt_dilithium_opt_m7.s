// based on code by: Markus Krausz (18.03.18)
// date 23.07.21: Now licensed under CC0 with permission of the authors.

.syntax unified
// 3
.macro montgomery_mul_32 a, b, Qprime, Q, tmp, tmp2
    smull \tmp, \a, \a, \b
    mul \tmp2, \tmp, \Qprime
    smlal \tmp, \a, \tmp2, \Q
.endm

// 2
.macro addSub1 c0, c1
    add.w \c0, \c0, \c1
    sub.w \c1, \c0, \c1, lsl #1
.endm

// 3
.macro addSub2 c0, c1, c2, c3
    add \c0, \c0, \c1
    add \c2, \c2, \c3
    sub.w \c1, \c0, \c1, lsl #1
    sub.w \c3, \c2, \c3, lsl #1
.endm

// 6
.macro addSub4 c0, c1, c2, c3, c4, c5, c6, c7
    add \c0, \c0, \c1
    add \c2, \c2, \c3
    add \c4, \c4, \c5
    add \c6, \c6, \c7
    sub.w \c1, \c0, \c1, lsl #1
    sub.w \c3, \c2, \c3, lsl #1
    sub.w \c5, \c4, \c5, lsl #1
    sub.w \c7, \c6, \c7, lsl #1
.endm

.macro _2_layer_CT_32 c0, c1, c2, c3, zeta0, zeta1, zeta2, Qprime, Q, tmp, tmp2
    montgomery_mul_32 \c2, \zeta0, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c3, \zeta0, \Qprime, \Q, \tmp, \tmp2
    addSub2 \c0, \c2, \c1, \c3

    montgomery_mul_32 \c1, \zeta1, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c3, \zeta2, \Qprime, \Q, \tmp, \tmp2
    addSub2 \c0, \c1, \c2, \c3
.endm

.macro _2_layer_inv_CT_32 c0, c1, c2, c3, zeta0, zeta1, zeta2, Qprime, Q, tmp, tmp2
    montgomery_mul_32 \c1, \zeta0, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c3, \zeta0, \Qprime, \Q, \tmp, \tmp2
    addSub2 \c0, \c1, \c2, \c3

    montgomery_mul_32 \c2, \zeta1, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c3, \zeta2, \Qprime, \Q, \tmp, \tmp2
    addSub2 \c0, \c2, \c1, \c3
.endm

.macro _3_layer_CT_32 c0, c1, c2, c3, c4, c5, c6, c7, xi0, xi1, xi2, xi3, xi4, xi5, xi6, twiddle, Qprime, Q, tmp, tmp2
    vmov \twiddle, \xi0
    montgomery_mul_32 \c4, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c5, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c6, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c7, \twiddle, \Qprime, \Q, \tmp, \tmp2
    addSub4 \c0, \c4, \c1, \c5, \c2, \c6, \c3, \c7

    vmov \twiddle, \xi1
    montgomery_mul_32 \c2, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c3, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi2
    montgomery_mul_32 \c6, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c7, \twiddle, \Qprime, \Q, \tmp, \tmp2
    addSub4 \c0, \c2, \c1, \c3, \c4, \c6, \c5, \c7

    vmov \twiddle, \xi3
    montgomery_mul_32 \c1, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi4
    montgomery_mul_32 \c3, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi5
    montgomery_mul_32 \c5, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi6
    montgomery_mul_32 \c7, \twiddle, \Qprime, \Q, \tmp, \tmp2
    addSub4 \c0, \c1, \c2, \c3, \c4, \c5, \c6, \c7
.endm

.macro _3_layer_inv_CT_32 c0, c1, c2, c3, c4, c5, c6, c7, xi0, xi1, xi2, xi3, xi4, xi5, xi6, twiddle, Qprime, Q, tmp, tmp2
    vmov \twiddle, \xi0
    montgomery_mul_32 \c1, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c3, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c5, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c7, \twiddle, \Qprime, \Q, \tmp, \tmp2
    addSub4 \c0, \c1, \c2, \c3, \c4, \c5, \c6, \c7

    vmov \twiddle, \xi1
    montgomery_mul_32 \c2, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c6, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi2
    montgomery_mul_32 \c3, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c7, \twiddle, \Qprime, \Q, \tmp, \tmp2
    addSub4 \c0, \c2, \c1, \c3, \c4, \c6, \c5, \c7

    vmov \twiddle, \xi3
    montgomery_mul_32 \c4, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi4
    montgomery_mul_32 \c5, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi5
    montgomery_mul_32 \c6, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi6
    montgomery_mul_32 \c7, \twiddle, \Qprime, \Q, \tmp, \tmp2
    addSub4 \c0, \c4, \c1, \c5, \c2, \c6, \c3, \c7
.endm

/************************************************************
* Name:         _3_layer_inv_butterfly_light_fast_first
*
* Description:  upper half of 3-layer inverse butterfly
*               defined over X^8 - 1
*
* Input:        (c4, c1, c6, c3) = coefficients on the upper half;
*               (xi0, xi1, xi2, xi3, xi4, xi5, xi6) =
*               (  1,  1,  w_4,   1, w_8, w_4, w_8^3) in
*               Montgomery domain
*
* Symbols:      R = 2^32
*
* Constants:    Qprime = -MOD^{-1} mod^{+-} R, Q = MOD
*
* Output:
*               c4 =  c4 + c1        + (c6 + c3)
*               c5 = (c4 - c1) w_4   + (c6 + c3) w_8^3
*               c6 =  c4 + c1        - (c6 + c3)
*               c7 = (c4 - c1) w_8^3 + (c6 + c3) w_4
************************************************************/
// 15
.macro _3_layer_inv_butterfly_light_fast_first c0, c1, c2, c3, c4, c5, c6, c7, xi0, xi1, xi2, xi3, xi4, xi5, xi6, twiddle, Qprime, Q, tmp, tmp2
    addSub2 \c4, \c1, \c6, \c3
    addSub1 \c4, \c6

    vmov \tmp, \xi4
    vmov \tmp2, \xi6

    smull.w \c0, \c5, \c1, \tmp
    smlal.w \c0, \c5, \c3, \tmp2
    mul.w \twiddle, \c0, \Qprime
    smlal.w \c0, \c5, \twiddle, \Q

    smull.w \c2, \c7, \c1, \tmp2
    smlal.w \c2, \c7, \c3, \tmp
    mul.w \twiddle, \c2, \Qprime
    smlal.w \c2, \c7, \twiddle, \Q
.endm

/************************************************************
* Name:         _3_layer_inv_butterfly_light_fast_second
*
* Description:  lower half of 3-layer inverse butterfly
*               defined over X^8 - 1, and the 2nd
*               layer of butterflies
*
* Input:
*               (c4, c5, c6, c7) = results of the upper half;
*               (c0, c1, c2, c3) = coefficients on the lower half;
*               (xi0, xi1, xi2, xi3, xi4, xi5, xi6) =
*               (  1,  1,  w_4,   1, w_8, w_4, w_8^3) in
*               Montgomery domain
*
* Symbols:      R = 2^32
*
* Constants:    Qprime = -MOD^{-1} mod^{+-} R, Q = MOD
*
* Output:       (normal order)
*               c0 =   c0 + c1     + (c2 + c3)         + (  c4 + c5     + (c6 + c7)       )
*               c1 =  (c0 - c1) w3 + (c2 - c3)  w4     + ( (c4 - c5) w5 + (c6 - c7) w6    )
*               c2 = ( c0 + c1     - (c2 + c3)) w1     + (( c4 + c5     - (c6 + c7)   ) w2)
*               c3 = ((c0 - c1) w3 - (c2 - c3)  w4) w1 + (((c4 - c5) w5 - (c6 - c7) w6) w2)
*               c4 =   c0 + c1     - (c2 + c3)         - (  c4 + c5     + (c6 + c7)       ) w0
*               c5 =  (c0 - c1) w3 + (c2 - c3)  w4     - ( (c4 - c5) w5 + (c6 - c7) w6    ) w0
*               c6 = ( c0 + c1     - (c2 + c3)) w1     - (( c4 + c5     - (c6 + c7)   ) w2) w0
*               c7 = ((c0 - c1) w3 - (c2 - c3)  w4) w1 - (((c4 - c5) w5 - (c6 - c7) w6) w2) w0
************************************************************/
// 19
.macro _3_layer_inv_butterfly_light_fast_second c0, c1, c2, c3, c4, c5, c6, c7, xi0, xi1, xi2, xi3, xi4, xi5, xi6, twiddle, Qprime, Q, tmp, tmp2
    addSub2 \c0, \c1, \c2, \c3

    vmov \twiddle, \xi2
    montgomery_mul_32 \c3, \twiddle, \Qprime, \Q, \tmp, \tmp2
    addSub2 \c0, \c2, \c1, \c3

    montgomery_mul_32 \c6, \twiddle, \Qprime, \Q, \tmp, \tmp2

    addSub4 \c0, \c4, \c1, \c5, \c2, \c6, \c3, \c7
.endm

// This code uses UMULL - which is constant time on the M4, but not on the M3
// Make sure that this code is never used on an M3
smlad r0,r0,r0,r0

// ##############################
// ##########   NTT    ##########
// ##############################

// void pqcrystals_dilithium_ntt(int32_t p[N]);
.global pqcrystals_dilithium_ntt_opt_m7
#ifndef __CLANG__
.type pqcrystals_dilithium_ntt_opt_m7,%function
#endif
.align 2
pqcrystals_dilithium_ntt_opt_m7:
  // bind aliases
  ptr_p     .req R0
  ptr_zeta  .req R1
  zeta      .req R1
  qinv      .req R2
  q         .req R3
  cntr      .req R4
  pol4      .req R4
  pol0      .req R5
  pol1      .req R6
  pol2      .req R7
  pol3      .req R8
  temp_h    .req R9
  temp_l    .req R10
  zeta0     .req R11
  zeta1     .req R12
  zeta2     .req R14
  pol5     .req R11
  pol6     .req R12
  pol7     .req R14

  // preserve registers
  push {R4-R11, R14}

  // load constants, ptr
  ldr.w qinv, inv_ntt_asm_smull_qinv  // -qinv_signed
  ldr.w q, inv_ntt_asm_smull_q

  // stage 1 - 3
  .equ distance, 512
  .equ strincr, 4

  ldr ptr_zeta, =zetas_new332
  vldm ptr_zeta!, {s2-s8}
  vmov s0, ptr_zeta

  add.w temp_l, ptr_p, #31*strincr // 32 iterations
  vmov s9, temp_l
                                         // Instructions:    36
                                         // Expected cycles: 22
                                         // Expected IPC:    1.64
                                         //
                                         // Cycle bound:     22.0
                                         // IPC bound:       1.64
                                         //
                                         // Wall time:     1.52s
                                         // User time:     1.52s
                                         //
                                         // ----- cycle (expected) ------>
                                         // 0                        25
                                         // |------------------------|----
        vmov r12, s3                     // *.............................
        ldr.w r5, [r0, #896]             // *.............................
        ldr.w r6, [r0, #512]             // .*............................
        vmov r8, s2                      // .*............................
        ldr.w r4, [r0, #256]             // ..*...........................
        smull r7, r5, r5, r8             // ..*...........................
        smull r6, r9, r6, r8             // ...*..........................
        ldr.w r11, [r0, #768]            // ...*..........................
        mul r1, r7, r2                   // ....*.........................
        mul r10, r6, r2                  // .....*........................
        vmov r14, s4                     // .....*........................
        smlal r7, r5, r1, r3             // ......*.......................
        smull r11, r7, r11, r8           // .......*......................
        ldr.w r1, [r0, #384]             // .......*......................
        smlal r6, r9, r10, r3            // ........*.....................
        add r1, r1, r5                   // ........*.....................
        mul r6, r11, r2                  // .........*....................
        sub.w r10, r1, r5, lsl #1        // .........*....................
        smull r10, r5, r10, r14          // ..........*...................
        smlal r11, r7, r6, r3            // ...........*..................
        ldr.w r6, [r0, #640]             // ...........*..................
        mul r11, r10, r2                 // ............*.................
        smull r8, r6, r6, r8             // .............*................
        add r4, r4, r7                   // .............*................
        sub.w r7, r4, r7, lsl #1         // ..............*...............
        smlal r10, r5, r11, r3           // ..............*...............
        smull r7, r11, r7, r14           // ...............*..............
        mul r10, r8, r2                  // ................*.............
        mul r14, r7, r2                  // .................*............
        smlal r8, r6, r10, r3            // ..................*...........
        ldr.w r10, [r0, #128]            // ..................*...........
        smull r8, r1, r1, r12            // ...................*..........
        smlal r7, r11, r14, r3           // ....................*.........
        add r7, r10, r6                  // ....................*.........
        sub.w r14, r7, r6, lsl #1        // .....................*........
        mul r6, r8, r2                   // .....................*........

                                           // ------ cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|-----
        // vmov r10, s2                    // .*.............................
        // ldr.w r9, [r0, #640]            // ...........*...................
        // smull r4, r14, r9, r10          // .............*.................
        // ldr.w r11, [r0, #768]           // ...*...........................
        // mul r8, r4, r2                  // ................*..............
        // smull r7, r11, r11, r10         // .......*.......................
        // ldr.w r9, [r0, #512]            // .*.............................
        // smlal r4, r14, r8, r3           // ..................*............
        // smull r4, r9, r9, r10           // ...*...........................
        // mul r12, r7, r2                 // .........*.....................
        // mul r8, r4, r2                  // .....*.........................
        // smlal r7, r11, r12, r3          // ...........*...................
        // ldr.w r12, [r0, #896]           // *..............................
        // smlal r4, r9, r8, r3            // ........*......................
        // smull r10, r8, r12, r10         // ..*............................
        // ldr.w r12, [r0, #256]           // ..*............................
        // mul r5, r10, r2                 // ....*..........................
        // add r4, r12, r11                // .............*.................
        // sub.w r11, r4, r11, lsl #1      // ..............*................
        // smlal r10, r8, r5, r3           // ......*........................
        // vmov r5, s4                     // .....*.........................
        // ldr.w r7, [r0, #384]            // .......*.......................
        // smull r12, r11, r11, r5         // ...............*...............
        // add r10, r7, r8                 // ........*......................
        // sub.w r7, r10, r8, lsl #1       // .........*.....................
        // smull r7, r5, r7, r5            // ..........*....................
        // mul r8, r12, r2                 // .................*.............
        // mul r6, r7, r2                  // ............*..................
        // smlal r12, r11, r8, r3          // ....................*..........
        // vmov r12, s3                    // *..............................
        // smull r8, r1, r10, r12          // ...................*...........
        // ldr.w r10, [r0, #128]           // ..................*............
        // smlal r7, r5, r6, r3            // ..............*................
        // add r7, r10, r14                // ....................*..........
        // sub.w r14, r7, r14, lsl #1      // .....................*.........
        // mul r6, r8, r2                  // .....................*.........

layer123_loop:
                                          // Instructions:    83
                                          // Expected cycles: 42
                                          // Expected IPC:    1.98
                                          //
                                          // Cycle bound:     42.0
                                          // IPC bound:       1.98
                                          //
                                          // Wall time:     363.82s
                                          // User time:     363.82s
                                          //
                                          // ----------- cycle (expected) ------------>
                                          // 0                        25
                                          // |------------------------|----------------
        add r14, r14, r5                  // *.........................................
        smull r4, r12, r4, r12            // *.........................................
        vmov r10, s7                      // .*........................................
        smlal r8, r1, r6, r3              // .*........................................
        ldr.w r8, [r0]                    // ..*.......................................
        mul r6, r4, r2                    // ..*.......................................
        sub.w r5, r14, r5, lsl #1         // ...*......................................
        smull r10, r14, r14, r10          // ...*......................................
        smlal r4, r12, r6, r3             // ....*.....................................
        add r6, r8, r9                    // ....*.....................................
        vmov r4, s5                       // .....*....................................
        mul r8, r10, r2                   // .....*....................................
        sub.w r9, r6, r9, lsl #1          // ......*...................................
        add r7, r7, r1                    // ......*...................................
        smlal r10, r14, r8, r3            // .......*..................................
        sub.w r8, r7, r1, lsl #1          // .......*..................................
        smull r10, r4, r7, r4             // ........*.................................
        add r7, r6, r12                   // ........*.................................
        add r9, r9, r11                   // .........*................................
        sub.w r12, r7, r12, lsl #1        // .........*................................
        sub.w r6, r9, r11, lsl #1         // ..........*...............................
        add r9, r9, r14                   // ..........*...............................
        mul r1, r10, r2                   // ...........*..............................
        sub.w r11, r9, r14, lsl #1        // ...........*..............................
        str.w r11, [r0, #640]             // ............*.............................
        vmov r11, s6                      // ............*.............................
        smlal r10, r4, r1, r3             // .............*............................
        vmov r10, s2                      // .............e............................
        str.w r9, [r0, #512]              // ..............*...........................
        smull r8, r1, r8, r11             // ..............*...........................
        ldr.w r9, [r0, #644]              // ...............e..........................
        add r7, r7, r4                    // ...............*..........................
        mul r11, r8, r2                   // ................*.........................
        sub.w r4, r7, r4, lsl #1          // ................*.........................
        str.w r4, [r0, #128]              // .................*........................
        smull r4, r14, r9, r10            // .................e........................
        smlal r8, r1, r11, r3             // ..................*.......................
        ldr.w r11, [r0, #772]             // ..................e.......................
        mul r8, r4, r2                    // ...................e......................
        str r7, [r0], #4                  // ...................*...................... // @slothy:core
        smull r7, r11, r11, r10           // ....................e.....................
        ldr.w r9, [r0, #512]              // ....................e.....................
        add r12, r12, r1                  // .....................*....................
        smlal r4, r14, r8, r3             // .....................e....................
        str.w r12, [r0, #252]             // ......................*...................
        smull r4, r9, r9, r10             // ......................e...................
        sub.w r1, r12, r1, lsl #1         // .......................*..................
        mul r12, r7, r2                   // .......................e..................
        mul r8, r4, r2                    // ........................e.................
        str.w r1, [r0, #380]              // ........................*.................
        smlal r7, r11, r12, r3            // .........................e................
        ldr.w r12, [r0, #896]             // .........................e................
        smlal r4, r9, r8, r3              // ..........................e...............
        smull r10, r8, r12, r10           // ...........................e..............
        vmov r1, s8                       // ...........................*..............
        smull r7, r1, r5, r1              // ............................*.............
        ldr.w r12, [r0, #256]             // ............................e.............
        mul r5, r10, r2                   // .............................e............
        add r4, r12, r11                  // .............................e............
        sub.w r11, r4, r11, lsl #1        // ..............................e...........
        mul r12, r7, r2                   // ..............................*...........
        smlal r10, r8, r5, r3             // ...............................e..........
        vmov r5, s4                       // ...............................e..........
        smlal r7, r1, r12, r3             // ................................*.........
        ldr.w r7, [r0, #384]              // ................................e.........
        smull r12, r11, r11, r5           // .................................e........
        add r10, r7, r8                   // .................................e........
        add r6, r6, r1                    // ..................................*.......
        sub.w r7, r10, r8, lsl #1         // ..................................e.......
        smull r7, r5, r7, r5              // ...................................e......
        str.w r6, [r0, #764]              // ...................................*......
        sub.w r1, r6, r1, lsl #1          // ....................................*.....
        mul r8, r12, r2                   // ....................................e.....
        mul r6, r7, r2                    // .....................................e....
        str.w r1, [r0, #892]              // .....................................*....
        smlal r12, r11, r8, r3            // ......................................e...
        vmov r12, s3                      // ......................................e...
        smull r8, r1, r10, r12            // .......................................e..
        ldr.w r10, [r0, #128]             // .......................................e..
        smlal r7, r5, r6, r3              // ........................................e.
        add r7, r10, r14                  // ........................................e.
        sub.w r14, r7, r14, lsl #1        // .........................................e
        mul r6, r8, r2                    // .........................................e

                                            // ------------------------ cycle (expected) ------------------------>
                                            // 0                        25                       50
                                            // |------------------------|------------------------|----------------
        // ldr.w R5, [R0]                   // .............................'.*...................................
        // ldr.w R6, [R0, #1*512/4]         // ..........................e..'.....................................
        // ldr.w R7, [R0, #2*512/4]         // ...............e.............'...........................~.........
        // ldr.w R8, [R0, #3*512/4]         // ...................e.........'...............................~.....
        // ldr.w R4, [R0, #4*512/4]         // .......e.....................'...................~.................
        // ldr.w R11, [R0, #5*512/4]        // ..e..........................'..............~......................
        // ldr.w R12, [R0, #6*512/4]        // .....e.......................'.................~...................
        // ldr.w R14, [R0, #7*512/4]        // ............e................'........................~............
        // vmov R1, s2                      // e............................'............~........................
        // smull R9, R4, R4, R1             // .........e...................'.....................~...............
        // mul R10, R9, R2                  // ...........e.................'.......................~.............
        // smlal R9, R4, R10, R3            // .............e...............'.........................~...........
        // smull R9, R11, R11, R1           // ....e........................'................~....................
        // mul R10, R9, R2                  // ......e......................'..................~..................
        // smlal R9, R11, R10, R3           // ........e....................'....................~................
        // smull R9, R12, R12, R1           // .......e.....................'...................~.................
        // mul R10, R9, R2                  // ..........e..................'......................~..............
        // smlal R9, R12, R10, R3           // ............e................'........................~............
        // smull R9, R14, R14, R1           // ..............e..............'..........................~..........
        // mul R10, R9, R2                  // ................e............'............................~........
        // smlal R9, R14, R10, R3           // ..................e..........'..............................~......
        // add R5, R5, R4                   // .............................'...*.................................
        // add R6, R6, R11                  // ...........................e.'.....................................
        // add R7, R7, R12                  // ................e............'............................~........
        // add R8, R8, R14                  // ....................e........'................................~....
        // sub.w R4, R5, R4, lsl #1         // .............................'.....*...............................
        // sub.w R11, R6, R11, lsl #1       // ............................e'.....................................
        // sub.w R12, R7, R12, lsl #1       // .................e...........'.............................~.......
        // sub.w R14, R8, R14, lsl #1       // .....................e.......'.................................~...
        // vmov R1, s3                      // .........................e...'.....................................
        // smull R9, R7, R7, R1             // .............................*.....................................
        // mul R10, R9, R2                  // .............................'.*...................................
        // smlal R9, R7, R10, R3            // .............................'...*.................................
        // smull R9, R8, R8, R1             // ..........................e..'.....................................
        // mul R10, R9, R2                  // ............................e'.....................................
        // smlal R9, R8, R10, R3            // .............................'*....................................
        // vmov R1, s4                      // ..................e..........'..............................~......
        // smull R9, R12, R12, R1           // ....................e........'................................~....
        // mul R10, R9, R2                  // .......................e.....'...................................~.
        // smlal R9, R12, R10, R3           // .........................e...'.....................................
        // smull R9, R14, R14, R1           // ......................e......'..................................~..
        // mul R10, R9, R2                  // ........................e....'.....................................
        // smlal R9, R14, R10, R3           // ...........................e.'.....................................
        // add R5, R5, R7                   // .............................'.......*.............................
        // add R6, R6, R8                   // .............................'.....*...............................
        // add R4, R4, R12                  // .............................'........*............................
        // add R11, R11, R14                // .............................*.....................................
        // sub.w R7, R5, R7, lsl #1         // .............................'........*............................
        // sub.w R8, R6, R8, lsl #1         // .............................'......*..............................
        // sub.w R12, R4, R12, lsl #1       // .............................'.........*...........................
        // sub.w R14, R11, R14, lsl #1      // .............................'..*..................................
        // vmov R1, s5                      // .............................'....*................................
        // smull R9, R6, R6, R1             // .............................'.......*.............................
        // mul R10, R9, R2                  // .............................'..........*..........................
        // smlal R9, R6, R10, R3            // ~............................'............*........................
        // vmov R1, s6                      // .............................'...........*.........................
        // smull R9, R8, R8, R1             // .~...........................'.............*.......................
        // mul R10, R9, R2                  // ...~.........................'...............*.....................
        // smlal R9, R8, R10, R3            // .....~.......................'.................*...................
        // vmov R1, s7                      // .............................'*....................................
        // smull R9, R11, R11, R1           // .............................'..*..................................
        // mul R10, R9, R2                  // .............................'....*................................
        // smlal R9, R11, R10, R3           // .............................'......*..............................
        // vmov R1, s8                      // ..............~..............'..........................*..........
        // smull R9, R14, R14, R1           // ...............~.............'...........................*.........
        // mul R10, R9, R2                  // .................~...........'.............................*.......
        // smlal R9, R14, R10, R3           // ...................~.........'...............................*.....
        // add R5, R5, R6                   // ..~..........................'..............*......................
        // add R7, R7, R8                   // ........~....................'....................*................
        // add R4, R4, R11                  // .............................'.........*...........................
        // add R12, R12, R14                // .....................~.......'.................................*...
        // sub.w R6, R5, R6, lsl #1         // ...~.........................'...............*.....................
        // sub.w R8, R7, R8, lsl #1         // ..........~..................'......................*..............
        // sub.w R11, R4, R11, lsl #1       // .............................'..........*..........................
        // sub.w R14, R12, R14, lsl #1      // .......................~.....'...................................*.
        // str.w R6, [R0, #1*512/4]         // ....~........................'................*....................
        // str.w R7, [R0, #2*512/4]         // .........~...................'.....................*...............
        // str.w R8, [R0, #3*512/4]         // ...........~.................'.......................*.............
        // str.w R4, [R0, #4*512/4]         // .~...........................'.............*.......................
        // str.w R11, [R0, #5*512/4]        // .............................'...........*.........................
        // str.w R12, [R0, #6*512/4]        // ......................~......'..................................*..
        // str.w R14, [R0, #7*512/4]        // ........................~....'....................................*
        // str R5, [R0], #4                 // ......~......................'..................*..................

        vmov temp_l, s9
        cmp ptr_p, temp_l
        bne layer123_loop
                                           // Instructions:    47
                                           // Expected cycles: 26
                                           // Expected IPC:    1.81
                                           //
                                           // Cycle bound:     25.0
                                           // IPC bound:       1.88
                                           //
                                           // Wall time:     72.62s
                                           // User time:     72.62s
                                           //
                                           // ----- cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|----
        add r14, r14, r5                   // *.............................
        smull r12, r4, r4, r12             // *.............................
        smlal r8, r1, r6, r3               // .*............................
        vmov r10, s8                       // .*............................
        sub.w r5, r14, r5, lsl #1          // ..*...........................
        mul r8, r12, r2                    // ..*...........................
        ldr.w r6, [r0]                     // ...*..........................
        smull r10, r5, r5, r10             // ...*..........................
        smlal r12, r4, r8, r3              // ....*.........................
        add r7, r7, r1                     // ....*.........................
        add r8, r6, r9                     // .....*........................
        mul r12, r10, r2                   // .....*........................
        add r6, r8, r4                     // ......*.......................
        sub.w r1, r7, r1, lsl #1           // ......*.......................
        smlal r10, r5, r12, r3             // .......*......................
        vmov r12, s5                       // .......*......................
        sub.w r10, r8, r9, lsl #1          // ........*.....................
        smull r12, r8, r7, r12             // ........*.....................
        vmov r9, s7                        // .........*....................
        add r7, r10, r11                   // .........*....................
        sub.w r10, r7, r11, lsl #1         // ..........*...................
        mul r11, r12, r2                   // ..........*...................
        add r10, r10, r5                   // ...........*..................
        str.w r10, [r0, #768]              // ...........*..................
        smull r9, r14, r14, r9             // ............*.................
        sub.w r10, r10, r5, lsl #1         // ............*.................
        str.w r10, [r0, #896]              // .............*................
        smlal r12, r8, r11, r3             // .............*................
        mul r10, r9, r2                    // ..............*...............
        vmov r11, s6                       // ..............*...............
        add r12, r6, r8                    // ...............*..............
        str r12, [r0], #4                  // ...............*.............. // @slothy:core
        smlal r9, r14, r10, r3             // ................*.............
        sub.w r12, r12, r8, lsl #1         // ................*.............
        str.w r12, [r0, #124]              // .................*............
        smull r9, r1, r1, r11              // .................*............
        add r10, r7, r14                   // ..................*...........
        sub.w r6, r6, r4, lsl #1           // ..................*...........
        mul r7, r9, r2                     // ...................*..........
        str.w r10, [r0, #508]              // ...................*..........
        sub.w r14, r10, r14, lsl #1        // ....................*.........
        str.w r14, [r0, #636]              // .....................*........
        smlal r9, r1, r7, r3               // .....................*........
        add r14, r6, r1                    // .......................*......
        str.w r14, [r0, #252]              // .......................*......
        sub.w r10, r14, r1, lsl #1         // ........................*.....
        str.w r10, [r0, #380]              // .........................*....

                                           // ------ cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|-----
        // add r14, r14, r5                // *..............................
        // smull r4, r12, r4, r12          // *..............................
        // vmov r10, s7                    // .........*.....................
        // smlal r8, r1, r6, r3            // .*.............................
        // ldr.w r8, [r0]                  // ...*...........................
        // mul r6, r4, r2                  // ..*............................
        // sub.w r5, r14, r5, lsl #1       // ..*............................
        // smull r10, r14, r14, r10        // ............*..................
        // smlal r4, r12, r6, r3           // ....*..........................
        // add r6, r8, r9                  // .....*.........................
        // vmov r4, s5                     // .......*.......................
        // mul r8, r10, r2                 // ..............*................
        // sub.w r9, r6, r9, lsl #1        // ........*......................
        // add r7, r7, r1                  // ....*..........................
        // smlal r10, r14, r8, r3          // ................*..............
        // sub.w r8, r7, r1, lsl #1        // ......*........................
        // smull r10, r4, r7, r4           // ........*......................
        // add r7, r6, r12                 // ......*........................
        // add r9, r9, r11                 // .........*.....................
        // sub.w r12, r7, r12, lsl #1      // ..................*............
        // sub.w r6, r9, r11, lsl #1       // ..........*....................
        // add r9, r9, r14                 // ..................*............
        // mul r1, r10, r2                 // ..........*....................
        // sub.w r11, r9, r14, lsl #1      // ....................*..........
        // str.w r11, [r0, #640]           // .....................*.........
        // vmov r11, s6                    // ..............*................
        // smlal r10, r4, r1, r3           // .............*.................
        // str.w r9, [r0, #512]            // ...................*...........
        // smull r8, r1, r8, r11           // .................*.............
        // add r7, r7, r4                  // ...............*...............
        // mul r11, r8, r2                 // ...................*...........
        // sub.w r4, r7, r4, lsl #1        // ................*..............
        // str.w r4, [r0, #128]            // .................*.............
        // smlal r8, r1, r11, r3           // .....................*.........
        // str r7, [r0], #4                // ...............*...............
        // add r12, r12, r1                // .......................*.......
        // str.w r12, [r0, #252]           // .......................*.......
        // sub.w r1, r12, r1, lsl #1       // ........................*......
        // str.w r1, [r0, #380]            // .........................*.....
        // vmov r1, s8                     // .*.............................
        // smull r7, r1, r5, r1            // ...*...........................
        // mul r12, r7, r2                 // .....*.........................
        // smlal r7, r1, r12, r3           // .......*.......................
        // add r6, r6, r1                  // ...........*...................
        // str.w r6, [r0, #764]            // ...........*...................
        // sub.w r1, r6, r1, lsl #1        // ............*..................
        // str.w r1, [r0, #892]            // .............*.................


  sub ptr_p, #32*4

  // stage 4 - 6
  .equ distance2, 64
  add.w temp_l, ptr_p, #8*112+8*4*4 // 8 iterations
  vmov s9, temp_l
  1:
    add.w temp_l, ptr_p, #3*strincr // 4 iterations
    vmov s10, temp_l
    vmov ptr_zeta, s0
    vldm ptr_zeta!, {s2-s8}
    vmov s0, ptr_zeta
                                        // Instructions:    25
                                        // Expected cycles: 16
                                        // Expected IPC:    1.56
                                        //
                                        // Cycle bound:     16.0
                                        // IPC bound:       1.56
                                        //
                                        // Wall time:     0.09s
                                        // User time:     0.09s
                                        //
                                        // ----- cycle (expected) ------>
                                        // 0                        25
                                        // |------------------------|----
        vmov r9, s2                     // *.............................
        ldr.w r4, [r0, #64]             // *.............................
        ldr.w r8, [r0, #80]             // .*............................
        smull r11, r4, r4, r9           // ..*...........................
        ldr.w r14, [r0, #112]           // ..*...........................
        ldr.w r1, [r0, #96]             // ...*..........................
        smull r5, r7, r8, r9            // ...*..........................
        smull r14, r6, r14, r9          // ....*.........................
        mul r10, r5, r2                 // .....*........................
        mul r12, r14, r2                // ......*.......................
        smlal r5, r7, r10, r3           // .......*......................
        smlal r14, r6, r12, r3          // ........*.....................
        vmov r12, s4                    // ........*.....................
        smull r10, r1, r1, r9           // .........*....................
        ldr.w r14, [r0, #48]            // .........*....................
        add r8, r14, r6                 // ..........*...................
        mul r9, r11, r2                 // ..........*...................
        mul r14, r10, r2                // ...........*..................
        smlal r11, r4, r9, r3           // ............*.................
        sub.w r9, r8, r6, lsl #1        // ............*.................
        smull r5, r6, r9, r12           // .............*................
        ldr.w r11, [r0, #32]            // .............*................
        smlal r10, r1, r14, r3          // ..............*...............
        vmov r14, s3                    // ..............*...............
        mul r9, r5, r2                  // ...............*..............

                                           // ------ cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|-----
        // ldr.w r4, [r0, #64]             // *..............................
        // ldr.w r9, [r0, #96]             // ...*...........................
        // vmov r6, s2                     // *..............................
        // ldr.w r10, [r0, #112]           // ..*............................
        // smull r10, r12, r10, r6         // ....*..........................
        // ldr.w r7, [r0, #80]             // .*.............................
        // mul r5, r10, r2                 // ......*........................
        // smull r9, r1, r9, r6            // .........*.....................
        // smlal r10, r12, r5, r3          // ........*......................
        // smull r14, r7, r7, r6           // ...*...........................
        // ldr.w r8, [r0, #48]             // .........*.....................
        // smull r10, r4, r4, r6           // ..*............................
        // add r8, r8, r12                 // ..........*....................
        // mul r6, r14, r2                 // .....*.........................
        // mul r5, r9, r2                  // ...........*...................
        // smlal r14, r7, r6, r3           // .......*.......................
        // sub.w r14, r8, r12, lsl #1      // ............*..................
        // vmov r12, s4                    // ........*......................
        // smlal r9, r1, r5, r3            // ..............*................
        // smull r5, r6, r14, r12          // .............*.................
        // mul r14, r10, r2                // ..........*....................
        // ldr.w r11, [r0, #32]            // .............*.................
        // mul r9, r5, r2                  // ...............*...............
        // smlal r10, r4, r14, r3          // ............*..................
        // vmov r14, s3                    // ..............*................

layer456_loop:
                                          // Instructions:    83
                                          // Expected cycles: 44
                                          // Expected IPC:    1.89
                                          //
                                          // Cycle bound:     42.0
                                          // IPC bound:       1.98
                                          //
                                          // Wall time:     225.51s
                                          // User time:     225.51s
                                          //
                                          // ------------ cycle (expected) ------------->
                                          // 0                        25
                                          // |------------------------|------------------
        smlal r5, r6, r9, r3              // *...........................................
        add r9, r11, r1                   // *...........................................
        sub.w r5, r9, r1, lsl #1          // .*..........................................
        smull r1, r8, r8, r14             // .*..........................................
        smull r12, r11, r5, r12           // ..*.........................................
        mul r10, r1, r2                   // ...*........................................
        mul r5, r12, r2                   // ....*.......................................
        smlal r1, r8, r10, r3             // .....*......................................
        ldr.w r1, [r0, #16]               // .....*......................................
        add r1, r1, r7                    // ......*.....................................
        smlal r12, r11, r5, r3            // ......*.....................................
        vmov r10, s5                      // .......*....................................
        add r12, r1, r8                   // .......*....................................
        smull r10, r5, r12, r10           // ........*...................................
        sub.w r1, r1, r7, lsl #1          // ........*...................................
        sub.w r12, r12, r8, lsl #1        // .........*..................................
        add r8, r1, r6                    // .........*..................................
        mul r7, r10, r2                   // ..........*.................................
        sub.w r1, r8, r6, lsl #1          // ...........*................................
        smull r9, r6, r9, r14             // ...........*................................
        smlal r10, r5, r7, r3             // ............*...............................
        ldr.w r7, [r0]                    // ............*...............................
        vmov r14, s7                      // .............*..............................
        mul r10, r9, r2                   // .............*..............................
        smull r8, r14, r8, r14            // ..............*.............................
        add r7, r7, r4                    // ..............*.............................
        smlal r9, r6, r10, r3             // ...............*............................
        vmov r9, s8                       // ...............*............................
        smull r10, r9, r1, r9             // ................*...........................
        sub.w r4, r7, r4, lsl #1          // ................*...........................
        add r1, r4, r11                   // .................*..........................
        add r7, r7, r6                    // .................*..........................
        add r4, r7, r5                    // ..................*.........................
        str r4, [r0], #4                  // ..................*......................... // @slothy:core
        sub.w r5, r4, r5, lsl #1          // ...................*........................
        mul r4, r10, r2                   // ...................*........................
        str.w r5, [r0, #12]               // ....................*.......................
        sub.w r5, r1, r11, lsl #1         // ....................*.......................
        smlal r10, r9, r4, r3             // .....................*......................
        vmov r11, s6                      // .....................*......................
        ldr.w r4, [r0, #64]               // ......................e.....................
        smull r11, r12, r12, r11          // ......................*.....................
        add r5, r5, r9                    // .......................*....................
        str.w r5, [r0, #92]               // .......................*....................
        sub.w r10, r5, r9, lsl #1         // ........................*...................
        mul r5, r11, r2                   // ........................*...................
        ldr.w r9, [r0, #96]               // .........................e..................
        sub.w r7, r7, r6, lsl #1          // .........................*..................
        smlal r11, r12, r5, r3            // ..........................*.................
        vmov r6, s2                       // ..........................e.................
        str.w r10, [r0, #108]             // ...........................*................
        ldr.w r10, [r0, #112]             // ...........................e................
        add r11, r7, r12                  // ............................*...............
        mul r7, r8, r2                    // ............................*...............
        sub.w r5, r11, r12, lsl #1        // .............................*..............
        smull r10, r12, r10, r6           // .............................e..............
        str.w r5, [r0, #44]               // ..............................*.............
        smlal r8, r14, r7, r3             // ..............................*.............
        ldr.w r7, [r0, #80]               // ...............................e............
        mul r5, r10, r2                   // ...............................e............
        add r8, r1, r14                   // ................................*...........
        smull r9, r1, r9, r6              // ................................e...........
        smlal r10, r12, r5, r3            // .................................e..........
        str.w r8, [r0, #60]               // .................................*..........
        sub.w r5, r8, r14, lsl #1         // ..................................*.........
        smull r14, r7, r7, r6             // ..................................e.........
        ldr.w r8, [r0, #48]               // ...................................e........
        smull r10, r4, r4, r6             // ...................................e........
        add r8, r8, r12                   // ....................................e.......
        mul r6, r14, r2                   // ....................................e.......
        str.w r5, [r0, #76]               // .....................................*......
        mul r5, r9, r2                    // .....................................e......
        smlal r14, r7, r6, r3             // ......................................e.....
        sub.w r14, r8, r12, lsl #1        // ......................................e.....
        vmov r12, s4                      // .......................................e....
        smlal r9, r1, r5, r3              // .......................................e....
        smull r5, r6, r14, r12            // ........................................e...
        str.w r11, [r0, #28]              // .........................................*..
        mul r14, r10, r2                  // .........................................e..
        ldr.w r11, [r0, #32]              // ..........................................e.
        mul r9, r5, r2                    // ..........................................e.
        smlal r10, r4, r14, r3            // ...........................................e
        vmov r14, s3                      // ...........................................e

                                            // ---------------------- cycle (expected) ----------------------->
                                            // 0                        25                       50
                                            // |------------------------|------------------------|-------------
        // ldr.w R5, [R0]                   // ......................'...........*.............................
        // ldr.w R6, [R0, #1*64/4]          // ......................'....*....................................
        // ldr.w R7, [R0, #2*64/4]          // ....................e.'.........................................
        // ldr.w R8, [R0, #3*64/4]          // .............e........'..................................~......
        // ldr.w R4, [R0, #4*64/4]          // e.....................'.....................~...................
        // ldr.w R11, [R0, #5*64/4]         // .........e............'..............................~..........
        // ldr.w R12, [R0, #6*64/4]         // ...e..................'........................~................
        // ldr.w R14, [R0, #7*64/4]         // .....e................'..........................~..............
        // vmov R1, s2                      // ....e.................'.........................~...............
        // smull R9, R4, R4, R1             // .............e........'..................................~......
        // mul R10, R9, R2                  // ...................e..'.........................................
        // smlal R9, R4, R10, R3            // .....................e'.........................................
        // smull R9, R11, R11, R1           // ............e.........'.................................~.......
        // mul R10, R9, R2                  // ..............e.......'...................................~.....
        // smlal R9, R11, R10, R3           // ................e.....'.....................................~...
        // smull R9, R12, R12, R1           // ..........e...........'...............................~.........
        // mul R10, R9, R2                  // ...............e......'....................................~....
        // smlal R9, R12, R10, R3           // .................e....'......................................~..
        // smull R9, R14, R14, R1           // .......e..............'............................~............
        // mul R10, R9, R2                  // .........e............'..............................~..........
        // smlal R9, R14, R10, R3           // ...........e..........'................................~........
        // add R5, R5, R4                   // ......................'.............*...........................
        // add R6, R6, R11                  // ......................'.....*...................................
        // add R7, R7, R12                  // ......................*.........................................
        // add R8, R8, R14                  // ..............e.......'...................................~.....
        // sub.w R4, R5, R4, lsl #1         // ......................'...............*.........................
        // sub.w R11, R6, R11, lsl #1       // ......................'.......*.................................
        // sub.w R12, R7, R12, lsl #1       // ......................'*........................................
        // sub.w R14, R8, R14, lsl #1       // ................e.....'.....................................~...
        // vmov R1, s3                      // .....................e'.........................................
        // smull R9, R7, R7, R1             // ......................'..........*..............................
        // mul R10, R9, R2                  // ......................'............*............................
        // smlal R9, R7, R10, R3            // ......................'..............*..........................
        // smull R9, R8, R8, R1             // ......................'*........................................
        // mul R10, R9, R2                  // ......................'..*......................................
        // smlal R9, R8, R10, R3            // ......................'....*....................................
        // vmov R1, s4                      // .................e....'......................................~..
        // smull R9, R12, R12, R1           // ......................'.*.......................................
        // mul R10, R9, R2                  // ......................'...*.....................................
        // smlal R9, R12, R10, R3           // ......................'.....*...................................
        // smull R9, R14, R14, R1           // ..................e...'.......................................~.
        // mul R10, R9, R2                  // ....................e.'.........................................
        // smlal R9, R14, R10, R3           // ......................*.........................................
        // add R5, R5, R7                   // ......................'................*........................
        // add R6, R6, R8                   // ......................'......*..................................
        // add R4, R4, R12                  // ......................'................*........................
        // add R11, R11, R14                // ......................'........*................................
        // sub.w R7, R5, R7, lsl #1         // ...~..................'........................*................
        // sub.w R8, R6, R8, lsl #1         // ......................'........*................................
        // sub.w R12, R4, R12, lsl #1       // ......................'...................*.....................
        // sub.w R14, R11, R14, lsl #1      // ......................'..........*..............................
        // vmov R1, s5                      // ......................'......*..................................
        // smull R9, R6, R6, R1             // ......................'.......*.................................
        // mul R10, R9, R2                  // ......................'.........*...............................
        // smlal R9, R6, R10, R3            // ......................'...........*.............................
        // vmov R1, s6                      // ......................'....................*....................
        // smull R9, R8, R8, R1             // ~.....................'.....................*...................
        // mul R10, R9, R2                  // ..~...................'.......................*.................
        // smlal R9, R8, R10, R3            // ....~.................'.........................*...............
        // vmov R1, s7                      // ......................'............*............................
        // smull R9, R11, R11, R1           // ......................'.............*...........................
        // mul R10, R9, R2                  // ......~...............'...........................*.............
        // smlal R9, R11, R10, R3           // ........~.............'.............................*...........
        // vmov R1, s8                      // ......................'..............*..........................
        // smull R9, R14, R14, R1           // ......................'...............*.........................
        // mul R10, R9, R2                  // ......................'..................*......................
        // smlal R9, R14, R10, R3           // ......................'....................*....................
        // add R5, R5, R6                   // ......................'.................*.......................
        // add R7, R7, R8                   // ......~...............'...........................*.............
        // add R4, R4, R11                  // ..........~...........'...............................*.........
        // add R12, R12, R14                // .~....................'......................*..................
        // sub.w R6, R5, R6, lsl #1         // ......................'..................*......................
        // sub.w R8, R7, R8, lsl #1         // .......~..............'............................*............
        // sub.w R11, R4, R11, lsl #1       // ............~.........'.................................*.......
        // sub.w R14, R12, R14, lsl #1      // ..~...................'.......................*.................
        // str.w R6, [R0, #1*64/4]          // ......................'...................*.....................
        // str.w R7, [R0, #2*64/4]          // ...................~..'........................................*
        // str.w R8, [R0, #3*64/4]          // ........~.............'.............................*...........
        // str.w R4, [R0, #4*64/4]          // ...........~..........'................................*........
        // str.w R11, [R0, #5*64/4]         // ...............~......'....................................*....
        // str.w R12, [R0, #6*64/4]         // .~....................'......................*..................
        // str.w R14, [R0, #7*64/4]         // .....~................'..........................*..............
        // str R5, [R0], #4                 // ......................'.................*.......................

        vmov temp_l, s10
        cmp ptr_p, temp_l
        bne layer456_loop
                                           // Instructions:    58
                                           // Expected cycles: 31
                                           // Expected IPC:    1.87
                                           //
                                           // Cycle bound:     30.0
                                           // IPC bound:       1.93
                                           //
                                           // Wall time:     92.21s
                                           // User time:     92.21s
                                           //
                                           // ------ cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|-----
        add r10, r11, r1                   // *..............................
        smull r11, r8, r8, r14             // *..............................
        smlal r5, r6, r9, r3               // .*.............................
        ldr.w r5, [r0]                     // .*.............................
        sub.w r1, r10, r1, lsl #1          // ..*............................
        mul r9, r11, r2                    // ..*............................
        add r5, r5, r4                     // ...*...........................
        smull r14, r10, r10, r14           // ...*...........................
        smlal r11, r8, r9, r3              // ....*..........................
        ldr.w r11, [r0, #16]               // ....*..........................
        add r11, r11, r7                   // .....*.........................
        mul r9, r14, r2                    // .....*.........................
        sub.w r7, r11, r7, lsl #1          // ......*........................
        smull r1, r12, r1, r12             // ......*........................
        smlal r14, r10, r9, r3             // .......*.......................
        add r9, r7, r6                     // .......*.......................
        mul r14, r1, r2                    // ........*......................
        vmov r7, s7                        // ........*......................
        sub.w r6, r9, r6, lsl #1           // .........*.....................
        smull r7, r9, r9, r7               // .........*.....................
        smlal r1, r12, r14, r3             // ..........*....................
        sub.w r14, r5, r4, lsl #1          // ..........*....................
        mul r4, r7, r2                     // ...........*...................
        vmov r1, s8                        // ...........*...................
        smull r6, r1, r6, r1               // ............*..................
        add r14, r14, r12                  // ............*..................
        sub.w r12, r14, r12, lsl #1        // .............*.................
        smlal r7, r9, r4, r3               // .............*.................
        mul r7, r6, r2                     // ..............*................
        vmov r4, s5                        // ..............*................
        add r14, r14, r9                   // ...............*...............
        str.w r14, [r0, #64]               // ...............*...............
        sub.w r14, r14, r9, lsl #1         // ................*..............
        add r9, r11, r8                    // ................*..............
        smlal r6, r1, r7, r3               // .................*.............
        sub.w r8, r9, r8, lsl #1           // .................*.............
        smull r9, r6, r9, r4               // ..................*............
        str.w r14, [r0, #80]               // ..................*............
        vmov r4, s6                        // ...................*...........
        add r14, r12, r1                   // ...................*...........
        str.w r14, [r0, #96]               // ....................*..........
        mul r7, r9, r2                     // ....................*..........
        sub.w r14, r14, r1, lsl #1         // .....................*.........
        smull r1, r8, r8, r4               // .....................*.........
        str.w r14, [r0, #112]              // ......................*........
        smlal r9, r6, r7, r3               // ......................*........
        mul r9, r1, r2                     // .......................*.......
        add r7, r5, r10                    // .......................*.......
        add r4, r7, r6                     // ........................*......
        str r4, [r0], #4                   // ........................*...... // @slothy:core
        smlal r1, r8, r9, r3               // .........................*.....
        sub.w r4, r4, r6, lsl #1           // .........................*.....
        str.w r4, [r0, #12]                // ..........................*....
        sub.w r10, r7, r10, lsl #1         // ..........................*....
        add r11, r10, r8                   // ...........................*...
        str.w r11, [r0, #28]               // ............................*..
        sub.w r5, r11, r8, lsl #1          // ............................*..
        str.w r5, [r0, #44]                // ..............................*

                                           // ------ cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|-----
        // smlal r5, r6, r9, r3            // .*.............................
        // add r9, r11, r1                 // *..............................
        // sub.w r5, r9, r1, lsl #1        // ..*............................
        // smull r1, r8, r8, r14           // *..............................
        // smull r12, r11, r5, r12         // ......*........................
        // mul r10, r1, r2                 // ..*............................
        // mul r5, r12, r2                 // ........*......................
        // smlal r1, r8, r10, r3           // ....*..........................
        // ldr.w r1, [r0, #16]             // ....*..........................
        // add r1, r1, r7                  // .....*.........................
        // smlal r12, r11, r5, r3          // ..........*....................
        // vmov r10, s5                    // ..............*................
        // add r12, r1, r8                 // ................*..............
        // smull r10, r5, r12, r10         // ..................*............
        // sub.w r1, r1, r7, lsl #1        // ......*........................
        // sub.w r12, r12, r8, lsl #1      // .................*.............
        // add r8, r1, r6                  // .......*.......................
        // mul r7, r10, r2                 // ....................*..........
        // sub.w r1, r8, r6, lsl #1        // .........*.....................
        // smull r9, r6, r9, r14           // ...*...........................
        // smlal r10, r5, r7, r3           // ......................*........
        // ldr.w r7, [r0]                  // .*.............................
        // vmov r14, s7                    // ........*......................
        // mul r10, r9, r2                 // .....*.........................
        // smull r8, r14, r8, r14          // .........*.....................
        // add r7, r7, r4                  // ...*...........................
        // smlal r9, r6, r10, r3           // .......*.......................
        // vmov r9, s8                     // ...........*...................
        // smull r10, r9, r1, r9           // ............*..................
        // sub.w r4, r7, r4, lsl #1        // ..........*....................
        // add r1, r4, r11                 // ............*..................
        // add r7, r7, r6                  // .......................*.......
        // add r4, r7, r5                  // ........................*......
        // str r4, [r0], #4                // ........................*......
        // sub.w r5, r4, r5, lsl #1        // .........................*.....
        // mul r4, r10, r2                 // ..............*................
        // str.w r5, [r0, #12]             // ..........................*....
        // sub.w r5, r1, r11, lsl #1       // .............*.................
        // smlal r10, r9, r4, r3           // .................*.............
        // vmov r11, s6                    // ...................*...........
        // smull r11, r12, r12, r11        // .....................*.........
        // add r5, r5, r9                  // ...................*...........
        // str.w r5, [r0, #92]             // ....................*..........
        // sub.w r10, r5, r9, lsl #1       // .....................*.........
        // mul r5, r11, r2                 // .......................*.......
        // sub.w r7, r7, r6, lsl #1        // ..........................*....
        // smlal r11, r12, r5, r3          // .........................*.....
        // str.w r10, [r0, #108]           // ......................*........
        // add r11, r7, r12                // ...........................*...
        // mul r7, r8, r2                  // ...........*...................
        // sub.w r5, r11, r12, lsl #1      // ............................*..
        // str.w r5, [r0, #44]             // ..............................*
        // smlal r8, r14, r7, r3           // .............*.................
        // add r8, r1, r14                 // ...............*...............
        // str.w r8, [r0, #60]             // ...............*...............
        // sub.w r5, r8, r14, lsl #1       // ................*..............
        // str.w r5, [r0, #76]             // ..................*............
        // str.w r11, [r0, #28]            // ............................*..


    add.w ptr_p, #112
    vmov temp_l, s9
    cmp.w ptr_p, temp_l
    bne 1b

    sub ptr_p, #4*4*8+112*8
    vmov ptr_zeta, s0
    // stage 7 and 8
    add cntr, ptr_p, #(1024-16) // 64 iterations

                                      // Instructions:    9
                                      // Expected cycles: 8
                                      // Expected IPC:    1.12
                                      //
                                      // Cycle bound:     8.0
                                      // IPC bound:       1.12
                                      //
                                      // Wall time:     0.01s
                                      // User time:     0.01s
                                      //
                                      // ----- cycle (expected) ------>
                                      // 0                        25
                                      // |------------------------|----
        ldr r8, [r1], #12             // *.............................
        ldr.w r6, [r0, #8]            // *.............................
        ldr.w r14, [r0, #12]          // .*............................
        ldr.w r9, [r0]                // .*............................
        ldr.w r10, [r1, #-8]          // ..*...........................
        smull r11, r7, r14, r8        // ...*..........................
        ldr.w r14, [r0, #4]           // ...*..........................
        mul r12, r11, r2              // .....*........................
        smlal r11, r7, r12, r3        // .......*......................

                                       // ------ cycle (expected) ------>
                                       // 0                        25
                                       // |------------------------|-----
        // ldr.w r10, [r1, #4]         // ..*............................
        // ldr r8, [r1], #12           // *..............................
        // ldr.w r14, [r0, #12]        // .*.............................
        // smull r12, r7, r14, r8      // ...*...........................
        // ldr.w r14, [r0, #4]         // ...*...........................
        // mul r11, r12, r2            // .....*.........................
        // ldr.w r6, [r0, #8]          // *..............................
        // smlal r12, r7, r11, r3      // .......*.......................
        // ldr.w r9, [r0]              // .*.............................

1:
                                          // Instructions:    31
                                          // Expected cycles: 16
                                          // Expected IPC:    1.94
                                          //
                                          // Cycle bound:     16.0
                                          // IPC bound:       1.94
                                          //
                                          // Wall time:     0.58s
                                          // User time:     0.58s
                                          //
                                          // ----- cycle (expected) ------>
                                          // 0                        25
                                          // |------------------------|----
        smull r5, r6, r6, r8              // *.............................
        add r8, r14, r7                   // *.............................
        sub.w r12, r8, r7, lsl #1         // .*............................
        smull r11, r7, r8, r10            // .*............................
        mul r8, r5, r2                    // ..*...........................
        mul r14, r11, r2                  // ...*..........................
        ldr.w r10, [r1, #4]               // ...e..........................
        smlal r5, r6, r8, r3              // ....*.........................
        ldr r8, [r1], #12                 // ....e.........................
        smlal r11, r7, r14, r3            // .....*........................
        ldr.w r11, [r1, #-16]             // .....*........................
        add r5, r9, r6                    // ......*.......................
        ldr.w r14, [r0, #28]              // ......e.......................
        smull r11, r9, r12, r11           // .......*......................
        add r12, r5, r7                   // .......*......................
        sub.w r5, r5, r6, lsl #1          // ........*.....................
        str r12, [r0], #16                // ........*..................... // @slothy:core
        sub.w r12, r12, r7, lsl #1        // .........*....................
        mul r6, r11, r2                   // .........*....................
        str.w r12, [r0, #-12]             // ..........*...................
        smull r12, r7, r14, r8            // ..........e...................
        smlal r11, r9, r6, r3             // ...........*..................
        ldr.w r14, [r0, #4]               // ...........e..................
        mul r11, r12, r2                  // ............e.................
        ldr.w r6, [r0, #8]                // ............e.................
        add r5, r5, r9                    // .............*................
        str.w r5, [r0, #-8]               // .............*................
        smlal r12, r7, r11, r3            // ..............e...............
        sub.w r5, r5, r9, lsl #1          // ..............*...............
        str.w r5, [r0, #-4]               // ...............*..............
        ldr.w r9, [r0]                    // ...............e..............

                                         // ------ cycle (expected) ------>
                                         // 0                        25
                                         // |------------------------|-----
        // ldr.w R12, [R1, #4]           // e............'..~............'.
        // ldr.w R14, [R1, #8]           // ..~..........'....*..........'.
        // ldr R11, [R1], #12            // .e...........'...~...........'.
        // ldr.w R5, [R0]                // ............e'..............~'.
        // ldr.w R6, [R0, #4]            // ........e....'..........~....'.
        // ldr.w R7, [R0, #8]            // .........e...'...........~...'.
        // ldr.w R8, [R0, #12]           // ...e.........'.....~.........'.
        // smull R9, R7, R7, R11         // .............*...............~.
        // mul R10, R9, R2               // .............'.*.............'.
        // smlal R9, R7, R10, R3         // .~...........'...*...........'.
        // smull R9, R8, R8, R11         // .......e.....'.........~.....'.
        // mul R10, R9, R2               // .........e...'...........~...'.
        // smlal R9, R8, R10, R3         // ...........e.'.............~.'.
        // add R5, R5, R7                // ...~.........'.....*.........'.
        // add R6, R6, R8                // .............*...............~.
        // sub.w R7, R5, R7, lsl #1      // .....~.......'.......*.......'.
        // sub.w R8, R6, R8, lsl #1      // .............'*..............'.
        // smull R9, R6, R6, R12         // .............'*..............'.
        // mul R10, R9, R2               // ~............'..*............'.
        // smlal R9, R6, R10, R3         // ..~..........'....*..........'.
        // smull R9, R8, R8, R14         // ....~........'......*........'.
        // mul R10, R9, R2               // ......~......'........*......'.
        // smlal R9, R8, R10, R3         // ........~....'..........*....'.
        // add R5, R5, R6                // ....~........'......*........'.
        // add R7, R7, R8                // ..........~..'............*..'.
        // sub.w R6, R5, R6, lsl #1      // ......~......'........*......'.
        // sub.w R8, R7, R8, lsl #1      // ...........~.'.............*.'.
        // str.w R6, [R0, #4]            // .......~.....'.........*.....'.
        // str.w R7, [R0, #8]            // ..........~..'............*..'.
        // str.w R8, [R0, #12]           // ............~'..............*'.
        // str R5, [R0], #16             // .....~.......'.......*.......'.

        cmp cntr, ptr_p
        bne 1b
                                          // Instructions:    22
                                          // Expected cycles: 15
                                          // Expected IPC:    1.47
                                          //
                                          // Cycle bound:     15.0
                                          // IPC bound:       1.47
                                          //
                                          // Wall time:     0.05s
                                          // User time:     0.05s
                                          //
                                          // ----- cycle (expected) ------>
                                          // 0                        25
                                          // |------------------------|----
        smull r11, r8, r6, r8             // *.............................
        add r14, r14, r7                  // *.............................
        sub.w r7, r14, r7, lsl #1         // .*............................
        smull r10, r14, r14, r10          // .*............................
        mul r12, r11, r2                  // ..*...........................
        ldr.w r6, [r1, #-4]               // ..*...........................
        mul r5, r10, r2                   // ...*..........................
        smlal r11, r8, r12, r3            // ....*.........................
        smull r7, r11, r7, r6             // .....*........................
        add r9, r9, r8                    // ......*.......................
        smlal r10, r14, r5, r3            // ......*.......................
        sub.w r10, r9, r8, lsl #1         // .......*......................
        mul r8, r7, r2                    // .......*......................
        add r9, r9, r14                   // ........*.....................
        str r9, [r0], #16                 // ........*..................... // @slothy:core
        smlal r7, r11, r8, r3             // .........*....................
        sub.w r9, r9, r14, lsl #1         // .........*....................
        str.w r9, [r0, #-12]              // ..........*...................
        add r9, r10, r11                  // ...........*..................
        sub.w r10, r9, r11, lsl #1        // ............*.................
        str.w r9, [r0, #-8]               // ............*.................
        str.w r10, [r0, #-4]              // ..............*...............

                                           // ------ cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|-----
        // smull r5, r6, r6, r8            // *..............................
        // add r8, r14, r7                 // *..............................
        // sub.w r12, r8, r7, lsl #1       // .*.............................
        // smull r11, r7, r8, r10          // .*.............................
        // mul r8, r5, r2                  // ..*............................
        // mul r14, r11, r2                // ...*...........................
        // smlal r5, r6, r8, r3            // ....*..........................
        // smlal r11, r7, r14, r3          // ......*........................
        // ldr.w r11, [r1, #-4]            // ..*............................
        // add r5, r9, r6                  // ......*........................
        // smull r11, r9, r12, r11         // .....*.........................
        // add r12, r5, r7                 // ........*......................
        // sub.w r5, r5, r6, lsl #1        // .......*.......................
        // str r12, [r0], #16              // ........*......................
        // sub.w r12, r12, r7, lsl #1      // .........*.....................
        // mul r6, r11, r2                 // .......*.......................
        // str.w r12, [r0, #-12]           // ..........*....................
        // smlal r11, r9, r6, r3           // .........*.....................
        // add r5, r5, r9                  // ...........*...................
        // str.w r5, [r0, #-8]             // ............*..................
        // sub.w r5, r5, r9, lsl #1        // ............*..................
        // str.w r5, [r0, #-4]             // ..............*................


    // restore registers
    pop {R4-R11, PC}

    // unbind aliases
    .unreq ptr_p
    .unreq ptr_zeta
    .unreq qinv
    .unreq q
    .unreq cntr
    .unreq pol0
    .unreq pol1
    .unreq pol2
    .unreq pol3
    .unreq temp_h
    .unreq temp_l
    .unreq zeta0
    .unreq zeta1
    .unreq zeta2

.align 2
inv_ntt_asm_smull_qinv:
.word 0xfc7fdfff
.align 2
inv_ntt_asm_smull_q:
.word 8380417

.section .rodata

.type zetas_new332, %object
.align 2
zetas_new332:
.word 25847, -2608894, -518909, 237124, -777960, -876248, 466468, 1826347, 2725464, 1024112, 2706023, 95776, 3077325, 3530437, 2353451, -1079900, 3585928, -1661693, -3592148, -2537516, 3915439, -359251, -549488, -1119584, -3861115, -3043716, 3574422, -2867647, -2091905, 2619752, -2108549, 3539968, -300467, 2348700, -539299, 3119733, -2118186, -3859737, -1699267, -1643818, 3505694, -3821735, -2884855, -1399561, -3277672, 3507263, -2140649, -1600420, 3699596, 3111497, 1757237, -19422, 811944, 531354, 954230, 3881043, 2680103, 4010497, 280005, 3900724, -2556880, 2071892, -2797779, -3930395, 2091667, 3407706, -1528703, 2316500, 3817976, -3677745, -3342478, 2244091, -3041255, -2446433, -3562462, -1452451, 266997, 2434439, 3475950, -1235728, 3513181, 2176455, -3520352, -3759364, -1585221, -1197226, -3193378, -1257611, 900702, 1859098, 1939314, 909542, 819034, -4083598, 495491, -1613174, -1000202, -43260, -522500, -3190144, -655327, -3122442, -3157330, 2031748, 3207046, -3632928, -3556995, -525098, 126922, -768622, -3595838, 3412210, 342297, 286988, -983419, -2437823, 4108315, 2147896, 3437287, -3342277, 2715295, 1735879, 203044, -2967645, 2842341, 2691481, -3693493, -2590150, 1265009, -411027, 4055324, 1247620, -2477047, 2486353, 1595974, -671102, -3767016, 1250494, -1228525, 2635921, -3548272, -22981, -2994039, 1869119, -1308169, 1903435, -1050970, -381987, -1333058, 1237275, 1349076, -3318210, -1430225, 1852771, -451100, 1312455, -1430430, 3306115, -1962642, -3343383, -1279661, 1917081, 264944, -2546312, -1374803, 508951, 1500165, 777191, 3097992, 2235880, 3406031, 44288, -542412, -2831860, -1100098, -1671176, -1846953, 904516, -2584293, -3724270, 3958618, 594136, -3776993, -3724342, -2013608, 2432395, -8578, 2454455, -164721, 1653064, 1957272, 3369112, -3249728, 185531, -1207385, 2389356, -3183426, 162844, -210977, 1616392, 3014001, 759969, 810149, 1652634, -1316856, -3694233, -1799107, 189548, -3038916, 3523897, -3553272, 3866901, 269760, 3159746, 2213111, -975884, -1851402, 1717735, 472078, -2409325, -426683, 1723600, -177440, -1803090, 1910376, 1315589, -1667432, -1104333, 1341330, -260646, -3833893, 1285669, -2939036, -2235985, -1584928, -420899, -2286327, -812732, 183443, -976891, -1439742, 1612842, -3545687, -3019102, -554416, 3919660, -3881060, -48306, -1362209, -3628969, 3937738, 1400424, 3839961, -846154, 1976782
.size zetas_new332,.-zetas_new332
