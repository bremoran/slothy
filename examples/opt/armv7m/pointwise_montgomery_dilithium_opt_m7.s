.syntax unified
.thumb

.macro montgomery_multiplication res, pa, pb, q, qinv
    smull \pa, \res, \pa, \pb
    mul \pb, \pa, \qinv
    smlal \pa, \res, \pb, \q
.endm


// void asm_pointwise_montgomery(int32_t c[N], const int32_t a[N], const int32_t b[N]);
.global pqcrystals_dilithium_asm_pointwise_montgomery_opt_m7
.type pqcrystals_dilithium_asm_pointwise_montgomery_opt_m7,%function
.align 2
pqcrystals_dilithium_asm_pointwise_montgomery_opt_m7:
    push.w {r4-r11, r14}
    c_ptr .req r0
    a_ptr .req r1
    b_ptr .req r2
    qinv  .req r3
    q     .req r4
    pa0   .req r5
    pa1   .req r6
    pa2   .req r7
    pb0   .req r8
    pb1   .req r9
    pb2   .req r10
    tmp0  .req r11
    ctr   .req r12
    res   .req r14

    movw qinv, #:lower16:0xfc7fdfff
    movt qinv, #:upper16:0xfc7fdfff
    movw q, #0xE001
    movt q, #0x7F


    // 85x3 = 255 coefficients
    movw ctr, #85
                                  // Instructions:    4
                                  // Expected cycles: 4
                                  // Expected IPC:    1.00
                                  //
                                  // Wall time:     0.01s
                                  // User time:     0.01s
                                  //
                                  // ----- cycle (expected) ------>
                                  // 0                        25
                                  // |------------------------|----
        ldr.w r8, [r1, #4]        // *.............................
        ldr.w r7, [r2, #4]        // .*............................
        ldr r6, [r1], #12         // ..*...........................
        ldr r9, [r2], #12         // ...*..........................

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // ldr.w r8, [r1, #4]      // *..............................
        // ldr.w r7, [r2, #4]      // .*.............................
        // ldr r6, [r1], #12       // ..*............................
        // ldr r9, [r2], #12       // ...*...........................

        sub r12, r12, #1
1:
                                       // Instructions:    19
                                       // Expected cycles: 12
                                       // Expected IPC:    1.58
                                       //
                                       // Wall time:     0.95s
                                       // User time:     0.95s
                                       //
                                       // ----- cycle (expected) ------>
                                       // 0                        25
                                       // |------------------------|----
        smull r14, r5, r8, r7          // *.............................
        smull r6, r10, r6, r9          // .*............................
        mul r11, r14, r3               // ..*...........................
        ldr r7, [r1, #-4]              // ..*...........................
        ldr r9, [r2, #-4]              // ...*..........................
        mul r8, r6, r3                 // ...*..........................
        smlal r14, r5, r11, r4         // ....*.........................
        smull r11, r14, r7, r9         // .....*........................
        smlal r6, r10, r8, r4          // ......*.......................
        ldr.w r8, [r1, #4]             // .......e......................
        str r10, [r0], #4              // .......*......................
        ldr.w r7, [r2, #4]             // ........e.....................
        mul r10, r11, r3               // ........*.....................
        str r5, [r0], #4               // .........*....................
        ldr r6, [r1], #12              // .........e....................
        ldr r9, [r2], #12              // ..........e...................
        smlal r11, r14, r10, r4        // ..........*...................
        str r14, [r0], #4              // ...........*..................
        subs r12, #1                   // ...........*..................

                                       // ------ cycle (expected) ------>
                                       // 0                        25
                                       // |------------------------|-----
        // ldr.w r6, [r1, #4]          // e....'......~....'......~....'.
        // ldr.w r7, [r1, #8]          // .....'.*.........'.~.........'.
        // ldr r5, [r1], #12           // ..e..'........~..'........~..'.
        // ldr.w r9, [r2, #4]          // .e...'.......~...'.......~...'.
        // ldr.w r10, [r2, #8]         // .....'..*........'..~........'.
        // ldr r8, [r2], #12           // ...e.'.........~.'.........~.'.
        // smull r5, r14, r5, r8       // .....'*..........'~..........'.
        // mul r8, r5, r3              // .....'..*........'..~........'.
        // smlal r5, r14, r8, r4       // .....'.....*.....'.....~.....'.
        // str r14, [r0], #4           // ~....'......*....'......~....'.
        // smull r6, r14, r6, r9       // .....*...........~...........~.
        // mul r9, r6, r3              // .....'.*.........'.~.........'.
        // smlal r6, r14, r9, r4       // .....'...*.......'...~.......'.
        // str r14, [r0], #4           // ..~..'........*..'........~..'.
        // smull r7, r14, r7, r10      // .....'....*......'....~......'.
        // mul r10, r7, r3             // .~...'.......*...'.......~...'.
        // smlal r7, r14, r10, r4      // ...~.'.........*.'.........~.'.
        // str r14, [r0], #4           // ....~'..........*'..........~'.
        // subs r12, #1                // ....~'..........*'..........~'.

        bne 1b
                                       // Instructions:    15
                                       // Expected cycles: 12
                                       // Expected IPC:    1.25
                                       //
                                       // Wall time:     0.08s
                                       // User time:     0.08s
                                       //
                                       // ----- cycle (expected) ------>
                                       // 0                        25
                                       // |------------------------|----
        ldr r11, [r1, #-4]             // *.............................
        smull r6, r9, r6, r9           // *.............................
        smull r8, r7, r8, r7           // .*............................
        ldr r5, [r2, #-4]              // .*............................
        mul r10, r6, r3                // ..*...........................
        smull r11, r14, r11, r5        // ...*..........................
        smlal r6, r9, r10, r4          // ....*.........................
        mul r10, r11, r3               // .....*........................
        mul r5, r8, r3                 // ......*.......................
        str r9, [r0], #4               // .......*......................
        smlal r8, r7, r5, r4           // ........*.....................
        str r7, [r0], #4               // .........*....................
        smlal r11, r14, r10, r4        // ..........*...................
        subs r12, #1                   // ...........*..................
        str r14, [r0], #4              // ...........*..................

                                        // ------ cycle (expected) ------>
                                        // 0                        25
                                        // |------------------------|-----
        // smull r14, r5, r8, r7        // .*.............................
        // smull r6, r10, r6, r9        // *..............................
        // mul r11, r14, r3             // ......*........................
        // ldr r7, [r1, #-4]            // *..............................
        // ldr r9, [r2, #-4]            // .*.............................
        // mul r8, r6, r3               // ..*............................
        // smlal r14, r5, r11, r4       // ........*......................
        // smull r11, r14, r7, r9       // ...*...........................
        // smlal r6, r10, r8, r4        // ....*..........................
        // str r10, [r0], #4            // .......*.......................
        // mul r10, r11, r3             // .....*.........................
        // str r5, [r0], #4             // .........*.....................
        // smlal r11, r14, r10, r4      // ..........*....................
        // str r14, [r0], #4            // ...........*...................
        // subs r12, #1                 // ...........*...................


    // final coefficient
    ldr.w pa0, [a_ptr]
    ldr.w pb0, [b_ptr]
    montgomery_multiplication res, pa0, pb0, q, qinv
    str.w res, [c_ptr]

    pop.w {r4-r11, pc}

.size pqcrystals_dilithium_asm_pointwise_montgomery_opt_m7, .-pqcrystals_dilithium_asm_pointwise_montgomery_opt_m7