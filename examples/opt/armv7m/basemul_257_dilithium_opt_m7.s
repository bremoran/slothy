// 2
.macro barrett_32 a, Qbar, Q, tmp
    smmulr.w \tmp, \a, \Qbar
    mls.w \a, \tmp, \Q, \a
.endm

.syntax unified
.cpu cortex-m4

.align 2
.global __asm_point_mul_257_16_opt_m7
.type __asm_point_mul_257_16_opt_m7, %function
__asm_point_mul_257_16_opt_m7:
    push.w {r4-r11, lr}

    ldr.w r14, [sp, #36]

    .equ width, 4

    add.w r12, r14, #64*width
    _point_mul_16_loop:
        _point_mul_16_loop_start:
                                           // Instructions:    28
                                           // Expected cycles: 22
                                           // Expected IPC:    1.27
                                           //
                                           // Wall time:     0.30s
                                           // User time:     0.30s
                                           //
                                           // ----- cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|----
        ldr.w r9, [r1, #2*width]           // *.............................
        ldr.w r5, [r14, #1*width]          // *.............................
        ldr.w r7, [r1, #3*width]           // .*............................
        ldr.w r10, [r1, #1*width]          // .*............................
        ldr.w r11, [r1], #4*width          // ..*...........................
        ldr.w r6, [r14], #2*width          // ..*...........................
        smultb r8, r11, r6                 // ....*.........................
        neg.w r6, r6                       // ....*.........................
        smultb r6, r10, r6                 // .....*........................
        smmulr.w r4, r8, r2                // ......*.......................
        mls.w r4, r4, r3, r8               // ........*.....................
        smmulr.w r8, r6, r2                // .........*....................
        pkhbt r4, r11, r4, lsl #16         // ..........*...................
        smultb r11, r9, r5                 // ..........*...................
        mls.w r8, r8, r3, r6               // ...........*..................
        neg.w r5, r5                       // ...........*..................
        smultb r5, r7, r5                  // ............*.................
        smmulr.w r6, r11, r2               // .............*................
        pkhbt r8, r10, r8, lsl #16         // .............*................
        smmulr.w r10, r5, r2               // ..............*...............
        str.w r8, [r0, #1*width]           // ..............*...............
        mls.w r8, r6, r3, r11              // ...............*..............
        mls.w r10, r10, r3, r5             // ................*.............
        pkhbt r6, r9, r8, lsl #16          // .................*............
        str.w r4, [r0], #2*width           // .................*............
        pkhbt r10, r7, r10, lsl #16        // ..................*...........
        str.w r10, [r0, #1*width]          // ...................*..........
        str.w r6, [r0], #2*width           // .....................*........

                                           // ------ cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|-----
        // ldr.w r7, [r1, #2*width]        // *..............................
        // ldr.w r8, [r1, #3*width]        // .*.............................
        // ldr.w r9, [r14, #1*width]       // *..............................
        // ldr.w r5, [r1, #1*width]        // .*.............................
        // ldr.w r4, [r1], #4*width        // ..*............................
        // ldr.w r6, [r14], #2*width       // ..*............................
        // smultb r10, r4, r6              // ....*..........................
        // smmulr.w r11, r10, r2           // ......*........................
        // mls.w r10, r11, r3, r10         // ........*......................
        // pkhbt r4, r4, r10, lsl #16      // ..........*....................
        // neg.w r6, r6                    // ....*..........................
        // smultb r10, r5, r6              // .....*.........................
        // smmulr.w r11, r10, r2           // .........*.....................
        // mls.w r10, r11, r3, r10         // ...........*...................
        // pkhbt r5, r5, r10, lsl #16      // .............*.................
        // str.w r5, [r0, #1*width]        // ..............*................
        // str.w r4, [r0], #2*width        // .................*.............
        // smultb r10, r7, r9              // ..........*....................
        // smmulr.w r11, r10, r2           // .............*.................
        // mls.w r10, r11, r3, r10         // ...............*...............
        // pkhbt r7, r7, r10, lsl #16      // .................*.............
        // neg.w r9, r9                    // ...........*...................
        // smultb r10, r8, r9              // ............*..................
        // smmulr.w r11, r10, r2           // ..............*................
        // mls.w r10, r11, r3, r10         // ................*..............
        // pkhbt r8, r8, r10, lsl #16      // ..................*............
        // str.w r8, [r0, #1*width]        // ...................*...........
        // str.w r7, [r0], #2*width        // .....................*.........

        _point_mul_16_loop_end:

    cmp.w r14, r12
    bne.w _point_mul_16_loop

    pop.w {r4-r11, pc}
