.syntax unified
.thumb
.macro redq a, tmp, q
    add     \tmp, \a,  #4194304
    asrs    \tmp, \tmp, #23
    mls     \a, \tmp, \q, \a
.endm

// void asm_reduce32(int32_t a[N]);
.global pqcrystals_dilithium_asm_reduce32_opt_m7
.type pqcrystals_dilithium_asm_reduce32_opt_m7, %function
.align 2
pqcrystals_dilithium_asm_reduce32_opt_m7:
    push {r4-r11, r14}

    movw r12,#:lower16:8380417
    movt r12,#:upper16:8380417
    movw r10, #32
    1:
        reduce32_start:
                                      // Instructions:    41
                                      // Expected cycles: 22
                                      // Expected IPC:    1.86
                                      //
                                      // Wall time:     0.80s
                                      // User time:     0.80s
                                      //
                                      // ----- cycle (expected) ------>
                                      // 0                        25
                                      // |------------------------|----
        ldr.w r9, [r0, #2*4]          // *.............................
        ldr.w r1, [r0, #5*4]          // *.............................
        add r5, r1, #4194304          // .*............................
        add r7, r9, #4194304          // .*............................
        asrs r3, r5, #23              // ..*...........................
        ldr.w r14, [r0, #4*4]         // ..*...........................
        asrs r7, r7, #23              // ...*..........................
        add r11, r14, #4194304        // ...*..........................
        asrs r11, r11, #23            // ....*.........................
        ldr.w r8, [r0, #3*4]          // ....*.........................
        add r5, r8, #4194304          // .....*........................
        mls r11, r11, r12, r14        // .....*........................
        ldr.w r4, [r0, #7*4]          // ......*.......................
        asrs r2, r5, #23              // ......*.......................
        str.w r11, [r0, #4*4]         // .......*......................
        mls r8, r2, r12, r8           // .......*......................
        mls r7, r7, r12, r9           // ........*.....................
        ldr.w r11, [r0, #1*4]         // ........*.....................
        str.w r8, [r0, #3*4]          // .........*....................
        add r14, r11, #4194304        // .........*....................
        ldr.w r9, [r0]                // ..........*...................
        asrs r14, r14, #23            // ..........*...................
        str.w r7, [r0, #2*4]          // ...........*..................
        mls r11, r14, r12, r11        // ...........*..................
        mls r1, r3, r12, r1           // ............*.................
        add r8, r4, #4194304          // ............*.................
        str.w r11, [r0, #1*4]         // .............*................
        ldr.w r2, [r0, #6*4]          // .............*................
        add r6, r2, #4194304          // ..............*...............
        asrs r3, r8, #23              // ..............*...............
        str.w r1, [r0, #5*4]          // ...............*..............
        mls r7, r3, r12, r4           // ...............*..............
        add r14, r9, #4194304         // ................*.............
        asrs r11, r6, #23             // ................*.............
        str.w r7, [r0, #7*4]          // .................*............
        mls r11, r11, r12, r2         // .................*............
        asrs r4, r14, #23             // ..................*...........
        subs r10, #1                  // ..................*...........
        str.w r11, [r0, #6*4]         // ...................*..........
        mls r14, r4, r12, r9          // ...................*..........
        str r14, [r0], #8*4           // .....................*........

                                          // ------ cycle (expected) ------>
                                          // 0                        25
                                          // |------------------------|-----
        // ldr.w r1, [r0]                 // ..........*....................
        // ldr.w r2, [r0, #1*4]           // ........*......................
        // ldr.w r3, [r0, #2*4]           // *..............................
        // ldr.w r4, [r0, #3*4]           // ....*..........................
        // ldr.w r5, [r0, #4*4]           // ..*............................
        // ldr.w r6, [r0, #5*4]           // *..............................
        // ldr.w r7, [r0, #6*4]           // .............*.................
        // ldr.w r8, [r0, #7*4]           // ......*........................
        // add     r9, r1,  #4194304      // ................*..............
        // asrs    r9, r9, #23            // ..................*............
        // mls     r1, r9, r12, r1        // ...................*...........
        // add     r9, r2,  #4194304      // .........*.....................
        // asrs    r9, r9, #23            // ..........*....................
        // mls     r2, r9, r12, r2        // ...........*...................
        // add     r9, r3,  #4194304      // .*.............................
        // asrs    r9, r9, #23            // ...*...........................
        // mls     r3, r9, r12, r3        // ........*......................
        // add     r9, r4,  #4194304      // .....*.........................
        // asrs    r9, r9, #23            // ......*........................
        // mls     r4, r9, r12, r4        // .......*.......................
        // add     r9, r5,  #4194304      // ...*...........................
        // asrs    r9, r9, #23            // ....*..........................
        // mls     r5, r9, r12, r5        // .....*.........................
        // add     r9, r6,  #4194304      // .*.............................
        // asrs    r9, r9, #23            // ..*............................
        // mls     r6, r9, r12, r6        // ............*..................
        // add     r9, r7,  #4194304      // ..............*................
        // asrs    r9, r9, #23            // ................*..............
        // mls     r7, r9, r12, r7        // .................*.............
        // add     r9, r8,  #4194304      // ............*..................
        // asrs    r9, r9, #23            // ..............*................
        // mls     r8, r9, r12, r8        // ...............*...............
        // str.w r2, [r0, #1*4]           // .............*.................
        // str.w r3, [r0, #2*4]           // ...........*...................
        // str.w r4, [r0, #3*4]           // .........*.....................
        // str.w r5, [r0, #4*4]           // .......*.......................
        // str.w r6, [r0, #5*4]           // ...............*...............
        // str.w r7, [r0, #6*4]           // ...................*...........
        // str.w r8, [r0, #7*4]           // .................*.............
        // str r1, [r0], #8*4             // .....................*.........
        // subs r10, #1                   // ..................*............

        //
        // LLVM MCA STATISTICS (ORIGINAL) BEGIN
        //
        //
        // [0] Code Region
        //
        // Iterations:        100
        // Instructions:      4100
        // Total Cycles:      3701
        // Total uOps:        4100
        //
        // Dispatch Width:    2
        // uOps Per Cycle:    1.11
        // IPC:               1.11
        // Block RThroughput: 20.5
        //
        //
        // Cycles with backend pressure increase [ 59.44% ]
        // Throughput Bottlenecks:
        //   Resource Pressure       [ 16.21% ]
        //   Data Dependencies:      [ 43.23% ]
        //   - Register Dependencies [ 43.23% ]
        //   - Memory Dependencies   [ 0.00% ]
        //
        //
        // Instruction Info:
        // [1]: #uOps
        // [2]: Latency
        // [3]: RThroughput
        // [4]: MayLoad
        // [5]: MayStore
        // [6]: HasSideEffects (U)
        //
        // [1]    [2]    [3]    [4]    [5]    [6]    Instructions:
        //  1      2     0.50    *                   ldr.w	r1, [r0]
        //  1      2     0.50    *                   ldr.w	r2, [r0, #4]
        //  1      2     0.50    *                   ldr.w	r3, [r0, #8]
        //  1      2     0.50    *                   ldr.w	r4, [r0, #12]
        //  1      2     0.50    *                   ldr.w	r5, [r0, #16]
        //  1      2     0.50    *                   ldr.w	r6, [r0, #20]
        //  1      2     0.50    *                   ldr.w	r7, [r0, #24]
        //  1      2     0.50    *                   ldr.w	r8, [r0, #28]
        //  1      1     0.50                        add.w	r9, r1, #4194304
        //  1      1     1.00                        asrs.w	r9, r9, #23
        //  1      2     1.00                        mls	r1, r9, r12, r1
        //  1      1     0.50                        add.w	r9, r2, #4194304
        //  1      1     1.00                        asrs.w	r9, r9, #23
        //  1      2     1.00                        mls	r2, r9, r12, r2
        //  1      1     0.50                        add.w	r9, r3, #4194304
        //  1      1     1.00                        asrs.w	r9, r9, #23
        //  1      2     1.00                        mls	r3, r9, r12, r3
        //  1      1     0.50                        add.w	r9, r4, #4194304
        //  1      1     1.00                        asrs.w	r9, r9, #23
        //  1      2     1.00                        mls	r4, r9, r12, r4
        //  1      1     0.50                        add.w	r9, r5, #4194304
        //  1      1     1.00                        asrs.w	r9, r9, #23
        //  1      2     1.00                        mls	r5, r9, r12, r5
        //  1      1     0.50                        add.w	r9, r6, #4194304
        //  1      1     1.00                        asrs.w	r9, r9, #23
        //  1      2     1.00                        mls	r6, r9, r12, r6
        //  1      1     0.50                        add.w	r9, r7, #4194304
        //  1      1     1.00                        asrs.w	r9, r9, #23
        //  1      2     1.00                        mls	r7, r9, r12, r7
        //  1      1     0.50                        add.w	r9, r8, #4194304
        //  1      1     1.00                        asrs.w	r9, r9, #23
        //  1      2     1.00                        mls	r8, r9, r12, r8
        //  1      3     1.00           *            str.w	r2, [r0, #4]
        //  1      3     1.00           *            str.w	r3, [r0, #8]
        //  1      3     1.00           *            str.w	r4, [r0, #12]
        //  1      3     1.00           *            str.w	r5, [r0, #16]
        //  1      3     1.00           *            str.w	r6, [r0, #20]
        //  1      3     1.00           *            str.w	r7, [r0, #24]
        //  1      3     1.00           *            str.w	r8, [r0, #28]
        //  1      3     1.00           *            str	r1, [r0], #32
        //  1      1     0.50                        subs.w	r10, r10, #1
        //
        //
        // Dynamic Dispatch Stall Cycles:
        // RAT     - Register unavailable:                      1600  (43.2%)
        // RCU     - Retire tokens unavailable:                 0
        // SCHEDQ  - Scheduler full:                            0
        // LQ      - Load queue full:                           0
        // SQ      - Store queue full:                          0
        // GROUP   - Static restrictions on the dispatch group: 600  (16.2%)
        // USH     - Uncategorised Structural Hazard:           0
        //
        //
        // Dispatch Logic - number of cycles where we saw N micro opcodes dispatched:
        // [# dispatched], [# cycles]
        //  0,              200  (5.4%)
        //  1,              2902  (78.4%)
        //  2,              599  (16.2%)
        //
        //
        // Schedulers - number of cycles where we saw N micro opcodes issued:
        // [# issued], [# cycles]
        //  0,          200  (5.4%)
        //  1,          2902  (78.4%)
        //  2,          599  (16.2%)
        //
        // Scheduler's queue usage:
        // No scheduler resources used.
        //
        //
        // Register File statistics:
        // Total number of mappings created:    4300
        // Max number of mappings used:         4
        //
        //
        // Resources:
        // [0.0] - M7UnitALU
        // [0.1] - M7UnitALU
        // [1]   - M7UnitBranch
        // [2]   - M7UnitLoadH
        // [3]   - M7UnitLoadL
        // [4]   - M7UnitMAC
        // [5]   - M7UnitSIMD
        // [6]   - M7UnitShift1
        // [7]   - M7UnitShift2
        // [8]   - M7UnitStore
        // [9]   - M7UnitVFP
        // [10]  - M7UnitVPortH
        // [11]  - M7UnitVPortL
        //
        //
        // Resource pressure per iteration:
        // [0.0]  [0.1]  [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    [10]   [11]
        // 8.50   8.50    -     4.00   4.00   8.00    -     8.00    -     8.00    -      -      -
        //
        // Resource pressure by instruction:
        // [0.0]  [0.1]  [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    [10]   [11]   Instructions:
        //  -      -      -      -     1.00    -      -      -      -      -      -      -      -     ldr.w	r1, [r0]
        //  -      -      -     1.00    -      -      -      -      -      -      -      -      -     ldr.w	r2, [r0, #4]
        //  -      -      -      -     1.00    -      -      -      -      -      -      -      -     ldr.w	r3, [r0, #8]
        //  -      -      -     1.00    -      -      -      -      -      -      -      -      -     ldr.w	r4, [r0, #12]
        //  -      -      -      -     1.00    -      -      -      -      -      -      -      -     ldr.w	r5, [r0, #16]
        //  -      -      -     1.00    -      -      -      -      -      -      -      -      -     ldr.w	r6, [r0, #20]
        //  -      -      -      -     1.00    -      -      -      -      -      -      -      -     ldr.w	r7, [r0, #24]
        //  -      -      -     1.00    -      -      -      -      -      -      -      -      -     ldr.w	r8, [r0, #28]
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	r9, r1, #4194304
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs.w	r9, r9, #23
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	r1, r9, r12, r1
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	r9, r2, #4194304
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs.w	r9, r9, #23
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	r2, r9, r12, r2
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	r9, r3, #4194304
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs.w	r9, r9, #23
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	r3, r9, r12, r3
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	r9, r4, #4194304
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs.w	r9, r9, #23
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	r4, r9, r12, r4
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	r9, r5, #4194304
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs.w	r9, r9, #23
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	r5, r9, r12, r5
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	r9, r6, #4194304
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs.w	r9, r9, #23
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	r6, r9, r12, r6
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	r9, r7, #4194304
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs.w	r9, r9, #23
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	r7, r9, r12, r7
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	r9, r8, #4194304
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs.w	r9, r9, #23
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	r8, r9, r12, r8
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str.w	r2, [r0, #4]
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str.w	r3, [r0, #8]
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str.w	r4, [r0, #12]
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str.w	r5, [r0, #16]
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str.w	r6, [r0, #20]
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str.w	r7, [r0, #24]
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str.w	r8, [r0, #28]
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str	r1, [r0], #32
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     subs.w	r10, r10, #1
        //
        //
        // Timeline view:
        //                     0123456789          0123456789          0123456789          0123456789          0123456789          01
        // Index     0123456789          0123456789          0123456789          0123456789          0123456789          0123456789
        //
        // [0,0]     DE   .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r1, [r0]
        // [0,1]     DE   .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r2, [r0, #4]
        // [0,2]     .DE  .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r3, [r0, #8]
        // [0,3]     .DE  .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r4, [r0, #12]
        // [0,4]     . DE .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r5, [r0, #16]
        // [0,5]     . DE .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r6, [r0, #20]
        // [0,6]     .  DE.    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r7, [r0, #24]
        // [0,7]     .  DE.    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r8, [r0, #28]
        // [0,8]     .   DE    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r9, r1, #4194304
        // [0,9]     .    DE   .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [0,10]    .    .DeE .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   mls	r1, r9, r12, r1
        // [0,11]    .    . DE .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r9, r2, #4194304
        // [0,12]    .    .  DE.    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [0,13]    .    .   DeE   .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   mls	r2, r9, r12, r2
        // [0,14]    .    .    DE   .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r9, r3, #4194304
        // [0,15]    .    .    .DE  .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [0,16]    .    .    . DeE.    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   mls	r3, r9, r12, r3
        // [0,17]    .    .    .  DE.    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r9, r4, #4194304
        // [0,18]    .    .    .   DE    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [0,19]    .    .    .    DeE  .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   mls	r4, r9, r12, r4
        // [0,20]    .    .    .    .DE  .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r9, r5, #4194304
        // [0,21]    .    .    .    . DE .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [0,22]    .    .    .    .  DeE    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   mls	r5, r9, r12, r5
        // [0,23]    .    .    .    .   DE    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r9, r6, #4194304
        // [0,24]    .    .    .    .    DE   .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [0,25]    .    .    .    .    .DeE .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   mls	r6, r9, r12, r6
        // [0,26]    .    .    .    .    . DE .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r9, r7, #4194304
        // [0,27]    .    .    .    .    .  DE.    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [0,28]    .    .    .    .    .   DeE   .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   mls	r7, r9, r12, r7
        // [0,29]    .    .    .    .    .    DE   .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r9, r8, #4194304
        // [0,30]    .    .    .    .    .    .DE  .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [0,31]    .    .    .    .    .    . DeE.    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   mls	r8, r9, r12, r8
        // [0,32]    .    .    .    .    .    . DeE.    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   str.w	r2, [r0, #4]
        // [0,33]    .    .    .    .    .    .  DeE    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   str.w	r3, [r0, #8]
        // [0,34]    .    .    .    .    .    .   DeE   .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   str.w	r4, [r0, #12]
        // [0,35]    .    .    .    .    .    .    DeE  .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   str.w	r5, [r0, #16]
        // [0,36]    .    .    .    .    .    .    .DeE .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   str.w	r6, [r0, #20]
        // [0,37]    .    .    .    .    .    .    . DeE.    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   str.w	r7, [r0, #24]
        // [0,38]    .    .    .    .    .    .    .  DeE    .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   str.w	r8, [r0, #28]
        // [0,39]    .    .    .    .    .    .    .    DeE  .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   str	r1, [r0], #32
        // [0,40]    .    .    .    .    .    .    .    .DE  .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   subs.w	r10, r10, #1
        // [1,0]     .    .    .    .    .    .    .    .DE  .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r1, [r0]
        // [1,1]     .    .    .    .    .    .    .    .  DE.    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r2, [r0, #4]
        // [1,2]     .    .    .    .    .    .    .    .  DE.    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r3, [r0, #8]
        // [1,3]     .    .    .    .    .    .    .    .   DE    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r4, [r0, #12]
        // [1,4]     .    .    .    .    .    .    .    .   DE    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r5, [r0, #16]
        // [1,5]     .    .    .    .    .    .    .    .    DE   .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r6, [r0, #20]
        // [1,6]     .    .    .    .    .    .    .    .    DE   .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r7, [r0, #24]
        // [1,7]     .    .    .    .    .    .    .    .    .DE  .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r8, [r0, #28]
        // [1,8]     .    .    .    .    .    .    .    .    .DE  .    .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r9, r1, #4194304
        // [1,9]     .    .    .    .    .    .    .    .    . DE .    .    .    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [1,10]    .    .    .    .    .    .    .    .    .  DeE    .    .    .    .    .    .    .    .    .    .    .    .    ..   mls	r1, r9, r12, r1
        // [1,11]    .    .    .    .    .    .    .    .    .   DE    .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r9, r2, #4194304
        // [1,12]    .    .    .    .    .    .    .    .    .    DE   .    .    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [1,13]    .    .    .    .    .    .    .    .    .    .DeE .    .    .    .    .    .    .    .    .    .    .    .    ..   mls	r2, r9, r12, r2
        // [1,14]    .    .    .    .    .    .    .    .    .    . DE .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r9, r3, #4194304
        // [1,15]    .    .    .    .    .    .    .    .    .    .  DE.    .    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [1,16]    .    .    .    .    .    .    .    .    .    .   DeE   .    .    .    .    .    .    .    .    .    .    .    ..   mls	r3, r9, r12, r3
        // [1,17]    .    .    .    .    .    .    .    .    .    .    DE   .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r9, r4, #4194304
        // [1,18]    .    .    .    .    .    .    .    .    .    .    .DE  .    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [1,19]    .    .    .    .    .    .    .    .    .    .    . DeE.    .    .    .    .    .    .    .    .    .    .    ..   mls	r4, r9, r12, r4
        // [1,20]    .    .    .    .    .    .    .    .    .    .    .  DE.    .    .    .    .    .    .    .    .    .    .    ..   add.w	r9, r5, #4194304
        // [1,21]    .    .    .    .    .    .    .    .    .    .    .   DE    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [1,22]    .    .    .    .    .    .    .    .    .    .    .    DeE  .    .    .    .    .    .    .    .    .    .    ..   mls	r5, r9, r12, r5
        // [1,23]    .    .    .    .    .    .    .    .    .    .    .    .DE  .    .    .    .    .    .    .    .    .    .    ..   add.w	r9, r6, #4194304
        // [1,24]    .    .    .    .    .    .    .    .    .    .    .    . DE .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [1,25]    .    .    .    .    .    .    .    .    .    .    .    .  DeE    .    .    .    .    .    .    .    .    .    ..   mls	r6, r9, r12, r6
        // [1,26]    .    .    .    .    .    .    .    .    .    .    .    .   DE    .    .    .    .    .    .    .    .    .    ..   add.w	r9, r7, #4194304
        // [1,27]    .    .    .    .    .    .    .    .    .    .    .    .    DE   .    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [1,28]    .    .    .    .    .    .    .    .    .    .    .    .    .DeE .    .    .    .    .    .    .    .    .    ..   mls	r7, r9, r12, r7
        // [1,29]    .    .    .    .    .    .    .    .    .    .    .    .    . DE .    .    .    .    .    .    .    .    .    ..   add.w	r9, r8, #4194304
        // [1,30]    .    .    .    .    .    .    .    .    .    .    .    .    .  DE.    .    .    .    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [1,31]    .    .    .    .    .    .    .    .    .    .    .    .    .   DeE   .    .    .    .    .    .    .    .    ..   mls	r8, r9, r12, r8
        // [1,32]    .    .    .    .    .    .    .    .    .    .    .    .    .   DeE   .    .    .    .    .    .    .    .    ..   str.w	r2, [r0, #4]
        // [1,33]    .    .    .    .    .    .    .    .    .    .    .    .    .    DeE  .    .    .    .    .    .    .    .    ..   str.w	r3, [r0, #8]
        // [1,34]    .    .    .    .    .    .    .    .    .    .    .    .    .    .DeE .    .    .    .    .    .    .    .    ..   str.w	r4, [r0, #12]
        // [1,35]    .    .    .    .    .    .    .    .    .    .    .    .    .    . DeE.    .    .    .    .    .    .    .    ..   str.w	r5, [r0, #16]
        // [1,36]    .    .    .    .    .    .    .    .    .    .    .    .    .    .  DeE    .    .    .    .    .    .    .    ..   str.w	r6, [r0, #20]
        // [1,37]    .    .    .    .    .    .    .    .    .    .    .    .    .    .   DeE   .    .    .    .    .    .    .    ..   str.w	r7, [r0, #24]
        // [1,38]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    DeE  .    .    .    .    .    .    .    ..   str.w	r8, [r0, #28]
        // [1,39]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    . DeE.    .    .    .    .    .    .    ..   str	r1, [r0], #32
        // [1,40]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .  DE.    .    .    .    .    .    .    ..   subs.w	r10, r10, #1
        // [2,0]     .    .    .    .    .    .    .    .    .    .    .    .    .    .    .  DE.    .    .    .    .    .    .    ..   ldr.w	r1, [r0]
        // [2,1]     .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    DE   .    .    .    .    .    .    ..   ldr.w	r2, [r0, #4]
        // [2,2]     .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    DE   .    .    .    .    .    .    ..   ldr.w	r3, [r0, #8]
        // [2,3]     .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .DE  .    .    .    .    .    .    ..   ldr.w	r4, [r0, #12]
        // [2,4]     .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .DE  .    .    .    .    .    .    ..   ldr.w	r5, [r0, #16]
        // [2,5]     .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    . DE .    .    .    .    .    .    ..   ldr.w	r6, [r0, #20]
        // [2,6]     .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    . DE .    .    .    .    .    .    ..   ldr.w	r7, [r0, #24]
        // [2,7]     .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .  DE.    .    .    .    .    .    ..   ldr.w	r8, [r0, #28]
        // [2,8]     .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .  DE.    .    .    .    .    .    ..   add.w	r9, r1, #4194304
        // [2,9]     .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .   DE    .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [2,10]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    DeE  .    .    .    .    .    ..   mls	r1, r9, r12, r1
        // [2,11]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .DE  .    .    .    .    .    ..   add.w	r9, r2, #4194304
        // [2,12]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    . DE .    .    .    .    .    ..   asrs.w	r9, r9, #23
        // [2,13]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .  DeE    .    .    .    .    ..   mls	r2, r9, r12, r2
        // [2,14]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .   DE    .    .    .    .    ..   add.w	r9, r3, #4194304
        // [2,15]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    DE   .    .    .    .    ..   asrs.w	r9, r9, #23
        // [2,16]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .DeE .    .    .    .    ..   mls	r3, r9, r12, r3
        // [2,17]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    . DE .    .    .    .    ..   add.w	r9, r4, #4194304
        // [2,18]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .  DE.    .    .    .    ..   asrs.w	r9, r9, #23
        // [2,19]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .   DeE   .    .    .    ..   mls	r4, r9, r12, r4
        // [2,20]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    DE   .    .    .    ..   add.w	r9, r5, #4194304
        // [2,21]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .DE  .    .    .    ..   asrs.w	r9, r9, #23
        // [2,22]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    . DeE.    .    .    ..   mls	r5, r9, r12, r5
        // [2,23]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .  DE.    .    .    ..   add.w	r9, r6, #4194304
        // [2,24]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .   DE    .    .    ..   asrs.w	r9, r9, #23
        // [2,25]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    DeE  .    .    ..   mls	r6, r9, r12, r6
        // [2,26]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .DE  .    .    ..   add.w	r9, r7, #4194304
        // [2,27]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    . DE .    .    ..   asrs.w	r9, r9, #23
        // [2,28]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .  DeE    .    ..   mls	r7, r9, r12, r7
        // [2,29]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .   DE    .    ..   add.w	r9, r8, #4194304
        // [2,30]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    DE   .    ..   asrs.w	r9, r9, #23
        // [2,31]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .DeE .    ..   mls	r8, r9, r12, r8
        // [2,32]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .DeE .    ..   str.w	r2, [r0, #4]
        // [2,33]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    . DeE.    ..   str.w	r3, [r0, #8]
        // [2,34]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .  DeE    ..   str.w	r4, [r0, #12]
        // [2,35]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .   DeE   ..   str.w	r5, [r0, #16]
        // [2,36]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    DeE  ..   str.w	r6, [r0, #20]
        // [2,37]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .DeE ..   str.w	r7, [r0, #24]
        // [2,38]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    . DeE..   str.w	r8, [r0, #28]
        // [2,39]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .   DeE   str	r1, [r0], #32
        // [2,40]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    DE   subs.w	r10, r10, #1
        //
        //
        // Average Wait times (based on the timeline view):
        // [0]: Executions
        // [1]: Average time spent waiting in a scheduler's queue
        // [2]: Average time spent waiting in a scheduler's queue while ready
        // [3]: Average time elapsed from WB until retire stage
        //
        //       [0]    [1]    [2]    [3]
        // 0.     3     0.0    0.0    0.0       ldr.w	r1, [r0]
        // 1.     3     0.0    0.0    0.0       ldr.w	r2, [r0, #4]
        // 2.     3     0.0    0.0    0.0       ldr.w	r3, [r0, #8]
        // 3.     3     0.0    0.0    0.0       ldr.w	r4, [r0, #12]
        // 4.     3     0.0    0.0    0.0       ldr.w	r5, [r0, #16]
        // 5.     3     0.0    0.0    0.0       ldr.w	r6, [r0, #20]
        // 6.     3     0.0    0.0    0.0       ldr.w	r7, [r0, #24]
        // 7.     3     0.0    0.0    0.0       ldr.w	r8, [r0, #28]
        // 8.     3     0.0    0.0    0.0       add.w	r9, r1, #4194304
        // 9.     3     0.0    0.0    0.0       asrs.w	r9, r9, #23
        // 10.    3     0.0    0.0    0.0       mls	r1, r9, r12, r1
        // 11.    3     0.0    0.0    0.0       add.w	r9, r2, #4194304
        // 12.    3     0.0    0.0    0.0       asrs.w	r9, r9, #23
        // 13.    3     0.0    0.0    0.0       mls	r2, r9, r12, r2
        // 14.    3     0.0    0.0    0.0       add.w	r9, r3, #4194304
        // 15.    3     0.0    0.0    0.0       asrs.w	r9, r9, #23
        // 16.    3     0.0    0.0    0.0       mls	r3, r9, r12, r3
        // 17.    3     0.0    0.0    0.0       add.w	r9, r4, #4194304
        // 18.    3     0.0    0.0    0.0       asrs.w	r9, r9, #23
        // 19.    3     0.0    0.0    0.0       mls	r4, r9, r12, r4
        // 20.    3     0.0    0.0    0.0       add.w	r9, r5, #4194304
        // 21.    3     0.0    0.0    0.0       asrs.w	r9, r9, #23
        // 22.    3     0.0    0.0    0.0       mls	r5, r9, r12, r5
        // 23.    3     0.0    0.0    0.0       add.w	r9, r6, #4194304
        // 24.    3     0.0    0.0    0.0       asrs.w	r9, r9, #23
        // 25.    3     0.0    0.0    0.0       mls	r6, r9, r12, r6
        // 26.    3     0.0    0.0    0.0       add.w	r9, r7, #4194304
        // 27.    3     0.0    0.0    0.0       asrs.w	r9, r9, #23
        // 28.    3     0.0    0.0    0.0       mls	r7, r9, r12, r7
        // 29.    3     0.0    0.0    0.0       add.w	r9, r8, #4194304
        // 30.    3     0.0    0.0    0.0       asrs.w	r9, r9, #23
        // 31.    3     0.0    0.0    0.0       mls	r8, r9, r12, r8
        // 32.    3     0.0    0.0    0.0       str.w	r2, [r0, #4]
        // 33.    3     0.0    0.0    0.0       str.w	r3, [r0, #8]
        // 34.    3     0.0    0.0    0.0       str.w	r4, [r0, #12]
        // 35.    3     0.0    0.0    0.0       str.w	r5, [r0, #16]
        // 36.    3     0.0    0.0    0.0       str.w	r6, [r0, #20]
        // 37.    3     0.0    0.0    0.0       str.w	r7, [r0, #24]
        // 38.    3     0.0    0.0    0.0       str.w	r8, [r0, #28]
        // 39.    3     0.0    0.0    0.0       str	r1, [r0], #32
        // 40.    3     0.0    0.0    0.0       subs.w	r10, r10, #1
        //        3     0.0    0.0    0.0       <total>
        //
        //
        // ORIGINAL LLVM MCA STATISTICS (ORIGINAL) END
        //
        //
        // LLVM MCA STATISTICS (OPTIMIZED) BEGIN
        //
        //
        // [0] Code Region
        //
        // Iterations:        100
        // Instructions:      4100
        // Total Cycles:      2502
        // Total uOps:        4100
        //
        // Dispatch Width:    2
        // uOps Per Cycle:    1.64
        // IPC:               1.64
        // Block RThroughput: 20.5
        //
        //
        // Cycles with backend pressure increase [ 15.95% ]
        // Throughput Bottlenecks:
        //   Resource Pressure       [ 7.99% ]
        //   Data Dependencies:      [ 7.95% ]
        //   - Register Dependencies [ 7.95% ]
        //   - Memory Dependencies   [ 0.00% ]
        //
        //
        // Instruction Info:
        // [1]: #uOps
        // [2]: Latency
        // [3]: RThroughput
        // [4]: MayLoad
        // [5]: MayStore
        // [6]: HasSideEffects (U)
        //
        // [1]    [2]    [3]    [4]    [5]    [6]    Instructions:
        //  1      2     0.50    *                   ldr.w	r9, [r0, #8]
        //  1      2     0.50    *                   ldr.w	r1, [r0, #20]
        //  1      1     0.50                        add.w	r5, r1, #4194304
        //  1      1     0.50                        add.w	r7, r9, #4194304
        //  1      1     1.00                        asrs	r3, r5, #23
        //  1      2     0.50    *                   ldr.w	lr, [r0, #16]
        //  1      1     1.00                        asrs	r7, r7, #23
        //  1      1     0.50                        add.w	r11, lr, #4194304
        //  1      1     1.00                        asrs.w	r11, r11, #23
        //  1      2     0.50    *                   ldr.w	r8, [r0, #12]
        //  1      1     0.50                        add.w	r5, r8, #4194304
        //  1      2     1.00                        mls	r11, r11, r12, lr
        //  1      2     0.50    *                   ldr.w	r4, [r0, #28]
        //  1      1     1.00                        asrs	r2, r5, #23
        //  1      3     1.00           *            str.w	r11, [r0, #16]
        //  1      2     1.00                        mls	r8, r2, r12, r8
        //  1      2     1.00                        mls	r7, r7, r12, r9
        //  1      2     0.50    *                   ldr.w	r11, [r0, #4]
        //  1      3     1.00           *            str.w	r8, [r0, #12]
        //  1      1     0.50                        add.w	lr, r11, #4194304
        //  1      2     0.50    *                   ldr.w	r9, [r0]
        //  1      1     1.00                        asrs.w	lr, lr, #23
        //  1      3     1.00           *            str.w	r7, [r0, #8]
        //  1      2     1.00                        mls	r11, lr, r12, r11
        //  1      2     1.00                        mls	r1, r3, r12, r1
        //  1      1     0.50                        add.w	r8, r4, #4194304
        //  1      3     1.00           *            str.w	r11, [r0, #4]
        //  1      2     0.50    *                   ldr.w	r2, [r0, #24]
        //  1      1     0.50                        add.w	r6, r2, #4194304
        //  1      1     1.00                        asrs.w	r3, r8, #23
        //  1      3     1.00           *            str.w	r1, [r0, #20]
        //  1      2     1.00                        mls	r7, r3, r12, r4
        //  1      1     0.50                        add.w	lr, r9, #4194304
        //  1      1     1.00                        asrs.w	r11, r6, #23
        //  1      3     1.00           *            str.w	r7, [r0, #28]
        //  1      2     1.00                        mls	r11, r11, r12, r2
        //  1      1     1.00                        asrs.w	r4, lr, #23
        //  1      1     0.50                        subs.w	r10, r10, #1
        //  1      3     1.00           *            str.w	r11, [r0, #24]
        //  1      2     1.00                        mls	lr, r4, r12, r9
        //  1      3     1.00           *            str	lr, [r0], #32
        //
        //
        // Dynamic Dispatch Stall Cycles:
        // RAT     - Register unavailable:                      199  (8.0%)
        // RCU     - Retire tokens unavailable:                 0
        // SCHEDQ  - Scheduler full:                            0
        // LQ      - Load queue full:                           0
        // SQ      - Store queue full:                          0
        // GROUP   - Static restrictions on the dispatch group: 200  (8.0%)
        // USH     - Uncategorised Structural Hazard:           0
        //
        //
        // Dispatch Logic - number of cycles where we saw N micro opcodes dispatched:
        // [# dispatched], [# cycles]
        //  0,              102  (4.1%)
        //  1,              700  (28.0%)
        //  2,              1700  (67.9%)
        //
        //
        // Schedulers - number of cycles where we saw N micro opcodes issued:
        // [# issued], [# cycles]
        //  0,          102  (4.1%)
        //  1,          700  (28.0%)
        //  2,          1700  (67.9%)
        //
        // Scheduler's queue usage:
        // No scheduler resources used.
        //
        //
        // Register File statistics:
        // Total number of mappings created:    4600
        // Max number of mappings used:         5
        //
        //
        // Resources:
        // [0.0] - M7UnitALU
        // [0.1] - M7UnitALU
        // [1]   - M7UnitBranch
        // [2]   - M7UnitLoadH
        // [3]   - M7UnitLoadL
        // [4]   - M7UnitMAC
        // [5]   - M7UnitSIMD
        // [6]   - M7UnitShift1
        // [7]   - M7UnitShift2
        // [8]   - M7UnitStore
        // [9]   - M7UnitVFP
        // [10]  - M7UnitVPortH
        // [11]  - M7UnitVPortL
        //
        //
        // Resource pressure per iteration:
        // [0.0]  [0.1]  [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    [10]   [11]
        // 8.50   8.50    -     4.00   4.00   8.00    -     8.00    -     8.00    -      -      -
        //
        // Resource pressure by instruction:
        // [0.0]  [0.1]  [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    [10]   [11]   Instructions:
        //  -      -      -      -     1.00    -      -      -      -      -      -      -      -     ldr.w	r9, [r0, #8]
        //  -      -      -     1.00    -      -      -      -      -      -      -      -      -     ldr.w	r1, [r0, #20]
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	r5, r1, #4194304
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	r7, r9, #4194304
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs	r3, r5, #23
        //  -      -      -      -     1.00    -      -      -      -      -      -      -      -     ldr.w	lr, [r0, #16]
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs	r7, r7, #23
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	r11, lr, #4194304
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs.w	r11, r11, #23
        //  -      -      -     1.00    -      -      -      -      -      -      -      -      -     ldr.w	r8, [r0, #12]
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	r5, r8, #4194304
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	r11, r11, r12, lr
        //  -      -      -      -     1.00    -      -      -      -      -      -      -      -     ldr.w	r4, [r0, #28]
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs	r2, r5, #23
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str.w	r11, [r0, #16]
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	r8, r2, r12, r8
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	r7, r7, r12, r9
        //  -      -      -     1.00    -      -      -      -      -      -      -      -      -     ldr.w	r11, [r0, #4]
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str.w	r8, [r0, #12]
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	lr, r11, #4194304
        //  -      -      -      -     1.00    -      -      -      -      -      -      -      -     ldr.w	r9, [r0]
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs.w	lr, lr, #23
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str.w	r7, [r0, #8]
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	r11, lr, r12, r11
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	r1, r3, r12, r1
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	r8, r4, #4194304
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str.w	r11, [r0, #4]
        //  -      -      -     1.00    -      -      -      -      -      -      -      -      -     ldr.w	r2, [r0, #24]
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	r6, r2, #4194304
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs.w	r3, r8, #23
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str.w	r1, [r0, #20]
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	r7, r3, r12, r4
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     add.w	lr, r9, #4194304
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs.w	r11, r6, #23
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str.w	r7, [r0, #28]
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	r11, r11, r12, r2
        // 0.50   0.50    -      -      -      -      -     1.00    -      -      -      -      -     asrs.w	r4, lr, #23
        // 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -     subs.w	r10, r10, #1
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str.w	r11, [r0, #24]
        //  -      -      -      -      -     1.00    -      -      -      -      -      -      -     mls	lr, r4, r12, r9
        //  -      -      -      -      -      -      -      -      -     1.00    -      -      -     str	lr, [r0], #32
        //
        //
        // Timeline view:
        //                     0123456789          0123456789          0123456789          0123456
        // Index     0123456789          0123456789          0123456789          0123456789
        //
        // [0,0]     DE   .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r9, [r0, #8]
        // [0,1]     DE   .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r1, [r0, #20]
        // [0,2]     .DE  .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r5, r1, #4194304
        // [0,3]     .DE  .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r7, r9, #4194304
        // [0,4]     . DE .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   asrs	r3, r5, #23
        // [0,5]     . DE .    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	lr, [r0, #16]
        // [0,6]     .  DE.    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   asrs	r7, r7, #23
        // [0,7]     .  DE.    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r11, lr, #4194304
        // [0,8]     .   DE    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r11, r11, #23
        // [0,9]     .   DE    .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r8, [r0, #12]
        // [0,10]    .    DE   .    .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r5, r8, #4194304
        // [0,11]    .    DeE  .    .    .    .    .    .    .    .    .    .    .    .    .    ..   mls	r11, r11, r12, lr
        // [0,12]    .    .DE  .    .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r4, [r0, #28]
        // [0,13]    .    . DE .    .    .    .    .    .    .    .    .    .    .    .    .    ..   asrs	r2, r5, #23
        // [0,14]    .    . DeE.    .    .    .    .    .    .    .    .    .    .    .    .    ..   str.w	r11, [r0, #16]
        // [0,15]    .    .  DeE    .    .    .    .    .    .    .    .    .    .    .    .    ..   mls	r8, r2, r12, r8
        // [0,16]    .    .   DeE   .    .    .    .    .    .    .    .    .    .    .    .    ..   mls	r7, r7, r12, r9
        // [0,17]    .    .    DE   .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r11, [r0, #4]
        // [0,18]    .    .    DeE  .    .    .    .    .    .    .    .    .    .    .    .    ..   str.w	r8, [r0, #12]
        // [0,19]    .    .    .DE  .    .    .    .    .    .    .    .    .    .    .    .    ..   add.w	lr, r11, #4194304
        // [0,20]    .    .    .DE  .    .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r9, [r0]
        // [0,21]    .    .    . DE .    .    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	lr, lr, #23
        // [0,22]    .    .    . DeE.    .    .    .    .    .    .    .    .    .    .    .    ..   str.w	r7, [r0, #8]
        // [0,23]    .    .    .  DeE    .    .    .    .    .    .    .    .    .    .    .    ..   mls	r11, lr, r12, r11
        // [0,24]    .    .    .   DeE   .    .    .    .    .    .    .    .    .    .    .    ..   mls	r1, r3, r12, r1
        // [0,25]    .    .    .    DE   .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r8, r4, #4194304
        // [0,26]    .    .    .    DeE  .    .    .    .    .    .    .    .    .    .    .    ..   str.w	r11, [r0, #4]
        // [0,27]    .    .    .    .DE  .    .    .    .    .    .    .    .    .    .    .    ..   ldr.w	r2, [r0, #24]
        // [0,28]    .    .    .    . DE .    .    .    .    .    .    .    .    .    .    .    ..   add.w	r6, r2, #4194304
        // [0,29]    .    .    .    . DE .    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r3, r8, #23
        // [0,30]    .    .    .    .  DeE    .    .    .    .    .    .    .    .    .    .    ..   str.w	r1, [r0, #20]
        // [0,31]    .    .    .    .  DeE    .    .    .    .    .    .    .    .    .    .    ..   mls	r7, r3, r12, r4
        // [0,32]    .    .    .    .   DE    .    .    .    .    .    .    .    .    .    .    ..   add.w	lr, r9, #4194304
        // [0,33]    .    .    .    .   DE    .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r11, r6, #23
        // [0,34]    .    .    .    .    DeE  .    .    .    .    .    .    .    .    .    .    ..   str.w	r7, [r0, #28]
        // [0,35]    .    .    .    .    DeE  .    .    .    .    .    .    .    .    .    .    ..   mls	r11, r11, r12, r2
        // [0,36]    .    .    .    .    .DE  .    .    .    .    .    .    .    .    .    .    ..   asrs.w	r4, lr, #23
        // [0,37]    .    .    .    .    .DE  .    .    .    .    .    .    .    .    .    .    ..   subs.w	r10, r10, #1
        // [0,38]    .    .    .    .    . DeE.    .    .    .    .    .    .    .    .    .    ..   str.w	r11, [r0, #24]
        // [0,39]    .    .    .    .    . DeE.    .    .    .    .    .    .    .    .    .    ..   mls	lr, r4, r12, r9
        // [0,40]    .    .    .    .    .   DeE   .    .    .    .    .    .    .    .    .    ..   str	lr, [r0], #32
        // [1,0]     .    .    .    .    .    DE   .    .    .    .    .    .    .    .    .    ..   ldr.w	r9, [r0, #8]
        // [1,1]     .    .    .    .    .    DE   .    .    .    .    .    .    .    .    .    ..   ldr.w	r1, [r0, #20]
        // [1,2]     .    .    .    .    .    .DE  .    .    .    .    .    .    .    .    .    ..   add.w	r5, r1, #4194304
        // [1,3]     .    .    .    .    .    .DE  .    .    .    .    .    .    .    .    .    ..   add.w	r7, r9, #4194304
        // [1,4]     .    .    .    .    .    . DE .    .    .    .    .    .    .    .    .    ..   asrs	r3, r5, #23
        // [1,5]     .    .    .    .    .    . DE .    .    .    .    .    .    .    .    .    ..   ldr.w	lr, [r0, #16]
        // [1,6]     .    .    .    .    .    .  DE.    .    .    .    .    .    .    .    .    ..   asrs	r7, r7, #23
        // [1,7]     .    .    .    .    .    .  DE.    .    .    .    .    .    .    .    .    ..   add.w	r11, lr, #4194304
        // [1,8]     .    .    .    .    .    .   DE    .    .    .    .    .    .    .    .    ..   asrs.w	r11, r11, #23
        // [1,9]     .    .    .    .    .    .   DE    .    .    .    .    .    .    .    .    ..   ldr.w	r8, [r0, #12]
        // [1,10]    .    .    .    .    .    .    DE   .    .    .    .    .    .    .    .    ..   add.w	r5, r8, #4194304
        // [1,11]    .    .    .    .    .    .    DeE  .    .    .    .    .    .    .    .    ..   mls	r11, r11, r12, lr
        // [1,12]    .    .    .    .    .    .    .DE  .    .    .    .    .    .    .    .    ..   ldr.w	r4, [r0, #28]
        // [1,13]    .    .    .    .    .    .    . DE .    .    .    .    .    .    .    .    ..   asrs	r2, r5, #23
        // [1,14]    .    .    .    .    .    .    . DeE.    .    .    .    .    .    .    .    ..   str.w	r11, [r0, #16]
        // [1,15]    .    .    .    .    .    .    .  DeE    .    .    .    .    .    .    .    ..   mls	r8, r2, r12, r8
        // [1,16]    .    .    .    .    .    .    .   DeE   .    .    .    .    .    .    .    ..   mls	r7, r7, r12, r9
        // [1,17]    .    .    .    .    .    .    .    DE   .    .    .    .    .    .    .    ..   ldr.w	r11, [r0, #4]
        // [1,18]    .    .    .    .    .    .    .    DeE  .    .    .    .    .    .    .    ..   str.w	r8, [r0, #12]
        // [1,19]    .    .    .    .    .    .    .    .DE  .    .    .    .    .    .    .    ..   add.w	lr, r11, #4194304
        // [1,20]    .    .    .    .    .    .    .    .DE  .    .    .    .    .    .    .    ..   ldr.w	r9, [r0]
        // [1,21]    .    .    .    .    .    .    .    . DE .    .    .    .    .    .    .    ..   asrs.w	lr, lr, #23
        // [1,22]    .    .    .    .    .    .    .    . DeE.    .    .    .    .    .    .    ..   str.w	r7, [r0, #8]
        // [1,23]    .    .    .    .    .    .    .    .  DeE    .    .    .    .    .    .    ..   mls	r11, lr, r12, r11
        // [1,24]    .    .    .    .    .    .    .    .   DeE   .    .    .    .    .    .    ..   mls	r1, r3, r12, r1
        // [1,25]    .    .    .    .    .    .    .    .    DE   .    .    .    .    .    .    ..   add.w	r8, r4, #4194304
        // [1,26]    .    .    .    .    .    .    .    .    DeE  .    .    .    .    .    .    ..   str.w	r11, [r0, #4]
        // [1,27]    .    .    .    .    .    .    .    .    .DE  .    .    .    .    .    .    ..   ldr.w	r2, [r0, #24]
        // [1,28]    .    .    .    .    .    .    .    .    . DE .    .    .    .    .    .    ..   add.w	r6, r2, #4194304
        // [1,29]    .    .    .    .    .    .    .    .    . DE .    .    .    .    .    .    ..   asrs.w	r3, r8, #23
        // [1,30]    .    .    .    .    .    .    .    .    .  DeE    .    .    .    .    .    ..   str.w	r1, [r0, #20]
        // [1,31]    .    .    .    .    .    .    .    .    .  DeE    .    .    .    .    .    ..   mls	r7, r3, r12, r4
        // [1,32]    .    .    .    .    .    .    .    .    .   DE    .    .    .    .    .    ..   add.w	lr, r9, #4194304
        // [1,33]    .    .    .    .    .    .    .    .    .   DE    .    .    .    .    .    ..   asrs.w	r11, r6, #23
        // [1,34]    .    .    .    .    .    .    .    .    .    DeE  .    .    .    .    .    ..   str.w	r7, [r0, #28]
        // [1,35]    .    .    .    .    .    .    .    .    .    DeE  .    .    .    .    .    ..   mls	r11, r11, r12, r2
        // [1,36]    .    .    .    .    .    .    .    .    .    .DE  .    .    .    .    .    ..   asrs.w	r4, lr, #23
        // [1,37]    .    .    .    .    .    .    .    .    .    .DE  .    .    .    .    .    ..   subs.w	r10, r10, #1
        // [1,38]    .    .    .    .    .    .    .    .    .    . DeE.    .    .    .    .    ..   str.w	r11, [r0, #24]
        // [1,39]    .    .    .    .    .    .    .    .    .    . DeE.    .    .    .    .    ..   mls	lr, r4, r12, r9
        // [1,40]    .    .    .    .    .    .    .    .    .    .   DeE   .    .    .    .    ..   str	lr, [r0], #32
        // [2,0]     .    .    .    .    .    .    .    .    .    .    DE   .    .    .    .    ..   ldr.w	r9, [r0, #8]
        // [2,1]     .    .    .    .    .    .    .    .    .    .    DE   .    .    .    .    ..   ldr.w	r1, [r0, #20]
        // [2,2]     .    .    .    .    .    .    .    .    .    .    .DE  .    .    .    .    ..   add.w	r5, r1, #4194304
        // [2,3]     .    .    .    .    .    .    .    .    .    .    .DE  .    .    .    .    ..   add.w	r7, r9, #4194304
        // [2,4]     .    .    .    .    .    .    .    .    .    .    . DE .    .    .    .    ..   asrs	r3, r5, #23
        // [2,5]     .    .    .    .    .    .    .    .    .    .    . DE .    .    .    .    ..   ldr.w	lr, [r0, #16]
        // [2,6]     .    .    .    .    .    .    .    .    .    .    .  DE.    .    .    .    ..   asrs	r7, r7, #23
        // [2,7]     .    .    .    .    .    .    .    .    .    .    .  DE.    .    .    .    ..   add.w	r11, lr, #4194304
        // [2,8]     .    .    .    .    .    .    .    .    .    .    .   DE    .    .    .    ..   asrs.w	r11, r11, #23
        // [2,9]     .    .    .    .    .    .    .    .    .    .    .   DE    .    .    .    ..   ldr.w	r8, [r0, #12]
        // [2,10]    .    .    .    .    .    .    .    .    .    .    .    DE   .    .    .    ..   add.w	r5, r8, #4194304
        // [2,11]    .    .    .    .    .    .    .    .    .    .    .    DeE  .    .    .    ..   mls	r11, r11, r12, lr
        // [2,12]    .    .    .    .    .    .    .    .    .    .    .    .DE  .    .    .    ..   ldr.w	r4, [r0, #28]
        // [2,13]    .    .    .    .    .    .    .    .    .    .    .    . DE .    .    .    ..   asrs	r2, r5, #23
        // [2,14]    .    .    .    .    .    .    .    .    .    .    .    . DeE.    .    .    ..   str.w	r11, [r0, #16]
        // [2,15]    .    .    .    .    .    .    .    .    .    .    .    .  DeE    .    .    ..   mls	r8, r2, r12, r8
        // [2,16]    .    .    .    .    .    .    .    .    .    .    .    .   DeE   .    .    ..   mls	r7, r7, r12, r9
        // [2,17]    .    .    .    .    .    .    .    .    .    .    .    .    DE   .    .    ..   ldr.w	r11, [r0, #4]
        // [2,18]    .    .    .    .    .    .    .    .    .    .    .    .    DeE  .    .    ..   str.w	r8, [r0, #12]
        // [2,19]    .    .    .    .    .    .    .    .    .    .    .    .    .DE  .    .    ..   add.w	lr, r11, #4194304
        // [2,20]    .    .    .    .    .    .    .    .    .    .    .    .    .DE  .    .    ..   ldr.w	r9, [r0]
        // [2,21]    .    .    .    .    .    .    .    .    .    .    .    .    . DE .    .    ..   asrs.w	lr, lr, #23
        // [2,22]    .    .    .    .    .    .    .    .    .    .    .    .    . DeE.    .    ..   str.w	r7, [r0, #8]
        // [2,23]    .    .    .    .    .    .    .    .    .    .    .    .    .  DeE    .    ..   mls	r11, lr, r12, r11
        // [2,24]    .    .    .    .    .    .    .    .    .    .    .    .    .   DeE   .    ..   mls	r1, r3, r12, r1
        // [2,25]    .    .    .    .    .    .    .    .    .    .    .    .    .    DE   .    ..   add.w	r8, r4, #4194304
        // [2,26]    .    .    .    .    .    .    .    .    .    .    .    .    .    DeE  .    ..   str.w	r11, [r0, #4]
        // [2,27]    .    .    .    .    .    .    .    .    .    .    .    .    .    .DE  .    ..   ldr.w	r2, [r0, #24]
        // [2,28]    .    .    .    .    .    .    .    .    .    .    .    .    .    . DE .    ..   add.w	r6, r2, #4194304
        // [2,29]    .    .    .    .    .    .    .    .    .    .    .    .    .    . DE .    ..   asrs.w	r3, r8, #23
        // [2,30]    .    .    .    .    .    .    .    .    .    .    .    .    .    .  DeE    ..   str.w	r1, [r0, #20]
        // [2,31]    .    .    .    .    .    .    .    .    .    .    .    .    .    .  DeE    ..   mls	r7, r3, r12, r4
        // [2,32]    .    .    .    .    .    .    .    .    .    .    .    .    .    .   DE    ..   add.w	lr, r9, #4194304
        // [2,33]    .    .    .    .    .    .    .    .    .    .    .    .    .    .   DE    ..   asrs.w	r11, r6, #23
        // [2,34]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    DeE  ..   str.w	r7, [r0, #28]
        // [2,35]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    DeE  ..   mls	r11, r11, r12, r2
        // [2,36]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .DE  ..   asrs.w	r4, lr, #23
        // [2,37]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .DE  ..   subs.w	r10, r10, #1
        // [2,38]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    . DeE..   str.w	r11, [r0, #24]
        // [2,39]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    . DeE..   mls	lr, r4, r12, r9
        // [2,40]    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .   DeE   str	lr, [r0], #32
        //
        //
        // Average Wait times (based on the timeline view):
        // [0]: Executions
        // [1]: Average time spent waiting in a scheduler's queue
        // [2]: Average time spent waiting in a scheduler's queue while ready
        // [3]: Average time elapsed from WB until retire stage
        //
        //       [0]    [1]    [2]    [3]
        // 0.     3     0.0    0.0    0.0       ldr.w	r9, [r0, #8]
        // 1.     3     0.0    0.0    0.0       ldr.w	r1, [r0, #20]
        // 2.     3     0.0    0.0    0.0       add.w	r5, r1, #4194304
        // 3.     3     0.0    0.0    0.0       add.w	r7, r9, #4194304
        // 4.     3     0.0    0.0    0.0       asrs	r3, r5, #23
        // 5.     3     0.0    0.0    0.0       ldr.w	lr, [r0, #16]
        // 6.     3     0.0    0.0    0.0       asrs	r7, r7, #23
        // 7.     3     0.0    0.0    0.0       add.w	r11, lr, #4194304
        // 8.     3     0.0    0.0    0.0       asrs.w	r11, r11, #23
        // 9.     3     0.0    0.0    0.0       ldr.w	r8, [r0, #12]
        // 10.    3     0.0    0.0    0.0       add.w	r5, r8, #4194304
        // 11.    3     0.0    0.0    0.0       mls	r11, r11, r12, lr
        // 12.    3     0.0    0.0    0.0       ldr.w	r4, [r0, #28]
        // 13.    3     0.0    0.0    0.0       asrs	r2, r5, #23
        // 14.    3     0.0    0.0    0.0       str.w	r11, [r0, #16]
        // 15.    3     0.0    0.0    0.0       mls	r8, r2, r12, r8
        // 16.    3     0.0    0.0    0.0       mls	r7, r7, r12, r9
        // 17.    3     0.0    0.0    0.0       ldr.w	r11, [r0, #4]
        // 18.    3     0.0    0.0    0.0       str.w	r8, [r0, #12]
        // 19.    3     0.0    0.0    0.0       add.w	lr, r11, #4194304
        // 20.    3     0.0    0.0    0.0       ldr.w	r9, [r0]
        // 21.    3     0.0    0.0    0.0       asrs.w	lr, lr, #23
        // 22.    3     0.0    0.0    0.0       str.w	r7, [r0, #8]
        // 23.    3     0.0    0.0    0.0       mls	r11, lr, r12, r11
        // 24.    3     0.0    0.0    0.0       mls	r1, r3, r12, r1
        // 25.    3     0.0    0.0    0.0       add.w	r8, r4, #4194304
        // 26.    3     0.0    0.0    0.0       str.w	r11, [r0, #4]
        // 27.    3     0.0    0.0    0.0       ldr.w	r2, [r0, #24]
        // 28.    3     0.0    0.0    0.0       add.w	r6, r2, #4194304
        // 29.    3     0.0    0.0    0.0       asrs.w	r3, r8, #23
        // 30.    3     0.0    0.0    0.0       str.w	r1, [r0, #20]
        // 31.    3     0.0    0.0    0.0       mls	r7, r3, r12, r4
        // 32.    3     0.0    0.0    0.0       add.w	lr, r9, #4194304
        // 33.    3     0.0    0.0    0.0       asrs.w	r11, r6, #23
        // 34.    3     0.0    0.0    0.0       str.w	r7, [r0, #28]
        // 35.    3     0.0    0.0    0.0       mls	r11, r11, r12, r2
        // 36.    3     0.0    0.0    0.0       asrs.w	r4, lr, #23
        // 37.    3     0.0    0.0    0.0       subs.w	r10, r10, #1
        // 38.    3     0.0    0.0    0.0       str.w	r11, [r0, #24]
        // 39.    3     0.0    0.0    0.0       mls	lr, r4, r12, r9
        // 40.    3     0.0    0.0    0.0       str	lr, [r0], #32
        //        3     0.0    0.0    0.0       <total>
        //
        //
        // ORIGINAL LLVM MCA STATISTICS (OPTIMIZED) END
        //
        reduce32_end:

        bne.w 1b

    pop {r4-r11, r14}
    bx lr
